a:3:{i:0;s:37:"http://pbsmasterpiecesweepstakes.com/";i:1;s:45336:"<!DOCTYPE html>
<html lang="en-US" class="no-js">
	<head>
		<meta charset="utf-8" />
		<title>PBS 2015 MASTERPIECE Sweepstakes</title>
<!--
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
-->	
	
	<meta name="keywords" content="" />
	<meta name="description" content="" />

	
		<meta property="fb:app_id"          content="1424393704457487" /> 
		<meta property="og:type"            content="website" /> 
		<meta property="og:url"             content="http://pbsmasterpiecesweepstakes.com/" />
		<meta property="og:title"           content="PBS 2015 MASTERPIECE Sweepstakes" />
		<meta property="og:description"     content="Enter the 2015 DOWNTON ABBEY SWEEPSTAKES for a chance to win a trip for 2 from the US/Canada to Britain & 1 of 4 monthly prizes. Enter daily through March 15, 2015." />
		<meta property="og:site_name"       content="PBS 2015 MASTERPIECE Sweepstakes" />
		<meta property="og:see_also"		content="http://www.pbs.org/wgbh/masterpiece/sweepstakes/" />
		<meta property="og:image"			content="http://pbsmasterpiecesweepstakes.com/assets/img/fb_sharing2.jpg" />
				
		<meta name="twitter:card"			content="summary_large_image" />
		<meta name="twitter:site"			content="" />
		<meta name="twitter:title"			content="PBS 2015 MASTERPIECE Sweepstakes" />
		<meta name="twitter:description"	content="2015 DOWNTON ABBEY Sweepstakes offers a chance to win a trip for 2 from the US/Canada to Britain & 1 of 4 mo. prizes." />
		<meta name="twitter:image:src" content="pbsmasterpiecesweepstakes.com/assets/img/fb_sharing2.jpg" />		
		<link rel="canonical" href="http://pbsmasterpiecesweepstakes.com/" id="canonical" />
		
	
		<!--[if lt IE 7]><link href="/assets/css/screen_IE6.css?20141214" media="all" rel="stylesheet" type="text/css" id="css" /><![endif]-->	
		<!--[if IE 7]><link href="/assets/css/screen_IE7.css?20141214" media="all" rel="stylesheet" type="text/css" id="css" /><![endif]-->
		<!--[if IE 8]><link href="/assets/css/screen_IE8.css?20141214" media="all" rel="stylesheet" type="text/css" id="css" /><![endif]-->
		<!--[if IE 9]><link href="/assets/css/screen_IE9.css?20141214" media="all" rel="stylesheet" type="text/css" id="css" /><![endif]-->
		<!--[if gt IE 9]><!--><link href="/assets/css/screen.css?20141214" media="all" rel="stylesheet" type="text/css" id="css" /><!--<![endif]-->

		<script type="text/javascript">
			
						try
			{
				if( top.location == location )
				{
					top.location.href = '//www.pbs.org/wgbh/masterpiece/2015-downton-abbey-sweepstakes' + location.search;
				}
			} catch(e){;}
						
			window.defer = window.defer || [];
			var _pbsSweeps2015 = {};
// 			window.NS = _pbsSweeps2015;
		</script>
		
	</head>
	<body>
		<div id="fb-root"></div>
		<div id="wrapper">
			<h1>The 2015 Downton Abbey Sweepstakes</h1>
			
			<div id="carousel">
				<ul id="carousel-slides">
					<li id="carousel-slide-0"><img src="/assets/img/carousel-slide-0.jpg" alt="Bampton Village" /></li>
					<li id="carousel-slide-1"><img src="/assets/img/carousel-slide-1.jpg" alt="Highclere Castle" /></li>
					<li id="carousel-slide-2"><img src="/assets/img/carousel-slide-2.jpg" alt="Ealing Studios" /></li>
					<li id="carousel-slide-3"><img src="/assets/img/carousel-slide-3.jpg" alt="Selection of Downton Abbey gifts" /></li>
					<li id="carousel-slide-4"><img src="/assets/img/carousel-slide-4.jpg" alt="Seasons 1 through 5" /></li>
				</ul>
			</div>
			
			<div id="content-landing" class="content">
				
				<h2 id="landing-grandprize">Grand Prize*</h2>
				
				<p>Enter daily December 15, 2014 through March 15, 2015, for a chance to <strong>win a 5-day, 4-night trip for two adults</strong> from the U.S. to Great Britain. Includes a <strong>visit to iconic Highclere Castle</strong> for private tea with The Countess of Carnarvon, author of <em>Lady Catherine, the Earl, and the Real Downton Abbey</em>, <strong>etiquette training</strong> from The English Manner, and <strong>guided tours of filming locations</strong> in the beautiful <strong>Oxfordshire Cotswolds</strong>, such as Bampton, Shilton, Cogges, and Swinbrook, and the downstairs set at <strong>Ealing Studios in London</strong>. Round-trip (economy class) airfare out of a Delta Air Lines-operated gateway city at the time of travel to London Heathrow Airport and accommodations at a Radisson Blu Edwardian Hotel. Travel must take place July 26, 2015 to July 31, 2015. Also receive all five seasons of <em>Downton Abbey</em> on DVD, the official companion book, <em>A Year in the Life of Downton Abbey</em> signed by cast members, and assorted <em>Downton Abbey</em> merchandise. ARV $7,500. Itinerary arranged by VisitBritain. <a href="/prize-details?PHPSESSID=11vvnqd3nt534q1a6u5652rbo0">(COMPLETE GRAND PRIZE DETAILS)</a>
				</p>
				<p>
					<strong style="color:#000">MONTHLY PRIZE</strong> (4 WINNERS IN TOTAL): Entry into the Sweepstakes includes a chance to win all five seasons of <em>Downton Abbey</em> on DVD and assorted <em>Downton Abbey</em> merchandise from shopPBS.org. ARV $500.
					<br /><a href="/winners-list?PHPSESSID=11vvnqd3nt534q1a6u5652rbo0">Winner's List</a>
				</p>
				<div id="content-landing-footer">
					<a id="content-landing-visitbritain" href="http://lovewall.visitbritain.com/en/14/film-and-tv&utm_source=&utm_medium=referral&utm_content=lovewall_film_tv&utm_campaign=wgbh_sweepstake" target="_new" title="Visit Britain">Visit Britain.com</a>
					<a class="moreprizepartners" href="/prize-partners?PHPSESSID=11vvnqd3nt534q1a6u5652rbo0">More Information about our Prize Partners &gt;&gt;</a>
					<p id="landing-share">
						Share:
						<a id="landing-share-facebook" href="//www.facebook.com/sharer/sharer.php?u=pbsmasterpiecesweepstakes.com&PHPSESSID=11vvnqd3nt534q1a6u5652rbo0" onclick="javascript:var a = false;if( window.open(this.href,'pbs_sweep_fb', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=650,width=600') == false ){a=true;};return a;" target="pbs_sweep_fb">Facebook</a>
						<a id="landing-share-twitter" href="//twitter.com/share?text=Win+a+5-day%2C+4-night+trip+for+two+adults.+%232015DOWNTONABBEY%0AEnter+here%3A&url=http://pbsmasterpiecesweepstakes.com" onclick="javascript:window.open(this.href,
  'pbs_sweep_twitter', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;" target="pbs_sweep_twitter">Twitter</a>
					</p>
					<p><em>Downton Abbey</em> is a Carnival Films/MASTERPIECE Co-Production.</p>
				</div>
				
					<form id="form" method="POST" action="" novalidate="novalidate"><input type="hidden" name="PHPSESSID" value="11vvnqd3nt534q1a6u5652rbo0" />
					<div id="form-header">
						<h2>Entry Form</h2>
						<div id="form-fbconnect-btn">Sign-In with Facebook</div>
						<div id="form-or">or Fill in the form</div>
					</div>
					<div id="formerror"></div>
					<div id="form-inputs">
						<div class="form-input" id="form-input-name-first">
							<label for="name_first">First Name:</label>
							<input name="name_first" class="formentry " value="" type="text" autocomplete="on" required="required" pattern="" maxlength="255" minlength="1" data-errormsg="Invalid first name." />
						</div>
						<div class="form-input" id="form-input-name-last">
							<label for="name_last">Last Name:</label>
							<input name="name_last" class="formentry " value="" type="text" autocomplete="on" required="required" pattern="" maxlength="255" minlength="1" data-errormsg="Invalid last name." />
						</div>
						<div class="form-input" id="form-input-address">
							<label for="address">Address:</label>
							<input name="address" class="formentry  " value="" id="enter-address" type="text" autocomplete="on" required="required" pattern="" maxlength="255" minlength="2" data-errormsg="Invalid address." />
						</div>
						<div class="form-input" id="form-input-zip">
							<label for="zip">Zip Code/Postal Code:</label>
							<input name="zip" class="formentry  " value="" id="enter-zip" type="text" autocomplete="on" required="required" pattern="(^\s{0,}[0-9]{5}\s{0,}$)|(^\s{0,}[A-Z][0-9][A-Z][\ ]{0,1}[0-9][A-Z][0-9]\s{0,}$){1}" maxlength="7" minlength="5" data-errormsg="Invalid zip/postal code." />
						</div>
						<div class="form-input" id="form-input-city">
							<label for="city">City:</label>
							<input name="city" class="formentry  " value="" id="enter-city" type="text" autocomplete="on" required="required" pattern="" maxlength="30" minlength="2" data-errormsg="Invalid city." />
						</div>
						<div class="form-input" id="form-input-state">
							<label for="state">State/Province:</label>
							<input name="state" class="formentry  " value="" id="enter-state" type="text" autocomplete="on" required="required" pattern="" maxlength="30" minlength="2" data-errormsg="Invalid state/province." />
						</div>
						<div class="form-input" id="form-input-email">
							<label for="email">Email:</label>
							<input name="email" class="formentry " value="" type="email" autocomplete="on" required="required" pattern="" maxlength="255" minlength="1" data-errormsg="Invalid email address." />
						</div>
						<div class="form-input" id="form-input-station">
							<label for="station">Station I watch MASTERPIECE on:</label>
							<select name="station" data-errormsg="Invalid station.">
								<option value=""></option><option value="KAKM">AK: Anchorage: KAKM</option><option value="KUAC">AK: Fairbanks: KUAC</option><option value="KTOO">AK: Juneau: KTOO</option><option value="WBIQ">AL: APT</option><option value="KETS">AR: AETN</option><option value="KVZK">AS: PBS American Samoa</option><option value="KAET">AZ: Phoenix: Eight Arizona PBS</option><option value="KUAT">AZ: Tucson: Arizona Public Media</option><option value="KEET">CA: Eureka: KEET</option><option value="KVPT">CA: Fresno: ValleyPBS</option><option value="KLCS">CA: Los Angeles: KLCS</option><option value="KOCE">CA: Los Angeles: PBS SoCal / KOCE</option><option value="KIXE">CA: Redding: KIXE</option><option value="KRCB">CA: Rohnert Park: KRCB</option><option value="KVIE">CA: Sacramento: KVIE</option><option value="KVCR">CA: San Bernardino: KVCR</option><option value="KPBS">CA: San Diego: KPBS</option><option value="KQED">CA: San Francisco: KQED</option><option value="KBDI">CO: Denver: CPT12</option><option value="KRMA">CO: Denver: RMPBS</option><option value="WEDH">CT: CPTV</option><option value="WETA">DC: Washington: WETA</option><option value="WHUT">DC: Washington: WHUT</option><option value="WXEL">FL: Boynton Beach: WXEL</option><option value="WBCC">FL: Cocoa: WBCC</option><option value="WCEU">FL: Daytona Beach: WDSC</option><option value="WGCU">FL: Ft. Myers: WGCU</option><option value="WUFT">FL: Gainesville: WUFT</option><option value="WJCT">FL: Jacksonville: WJCT</option><option value="WLRN">FL: Miami: WLRN</option><option value="WPBT">FL: Miami: WPBT</option><option value="WUCF">FL: Orlando: WUCF</option><option value="WSRE">FL: Pensacola: WSRE</option><option value="WFSU">FL: Tallahassee: WFSU</option><option value="WEDU">FL: Tampa: WEDU</option><option value="WUSF">FL: Tampa: WUSF</option><option value="WPBA">GA: Atlanta: PBA</option><option value="WGTV">GA: GPB</option><option value="KGTF">GU: PBS Guam</option><option value="KHET">HI: PBS Hawaii</option><option value="KDIN">IA: Iowa PTV</option><option value="KAID">ID: Idaho PTV</option><option value="WSIU">IL: Carbondale: WSIU</option><option value="WEIU">IL: Charleston: WEIU</option><option value="WSEC">IL: Chatham: WMEC</option><option value="WTTW">IL: Chicago: WTTW</option><option value="WYCC">IL: Chicago: WYCC</option><option value="WQPT">IL: Moline: Quad Cities PBS</option><option value="WTVP">IL: Peoria: WTVP</option><option value="WSEC">IL: Springfield: Network Knowledge</option><option value="WILL">IL: Urbana: WILL</option><option value="WTIU">IN: Bloomington: WTIU</option><option value="WNIN">IN: Evansville: WNIN</option><option value="WFWA">IN: Fort Wayne: WFWA</option><option value="WFYI">IN: Indianapolis: WFYI</option><option value="WYIN">IN: Merrillville: WYIN</option><option value="WIPB">IN: Muncie: WIPB</option><option value="WNIT">IN: South Bend: WNIT</option><option value="WVUT">IN: Vincennes: WVUT</option><option value="KOOD">KS: Bunker Hill: SHPTV</option><option value="KTWU">KS: Topeka: KTWU</option><option value="KPTS">KS: Wichita: KPTS</option><option value="WKGB">KY: KET</option><option value="WKYU">KY: WKYU</option><option value="WLPB">LA: LPB</option><option value="WYES">LA: New Orleans: WYES</option><option value="WGBH">MA: Boston: WGBH</option><option value="WGBY">MA: Springfield: WGBY</option><option value="WMPT">MD: MPT</option><option value="WCBB">ME: MPBN</option><option value="WTVS">MI: Detroit: Detroit PTV</option><option value="WKAR">MI: East Lansing: WKAR</option><option value="WFUM">MI: Flint: WFUM</option><option value="WGVU">MI: Grand Rapids: WGVU</option><option value="WNMU">MI: Marquette: WNMU</option><option value="WCMU">MI: Mt. Pleasant: WCMU</option><option value="WDCQ">MI: University Center: WDCQ</option><option value="KWCM">MN: Appleton: KWCM</option><option value="KSMQ">MN: Austin: KSMQ</option><option value="KAWE">MN: Bemidji: Lakeland PTV</option><option value="WDSE">MN: Duluth: WDSE</option><option value="KTCA">MN: Minneapolis: TPT</option><option value="KCPT">MO: Kansas City: KCPT</option><option value="KOZK">MO: Springfield: OPT</option><option value="KETC">MO: St. Louis: KETC</option><option value="KMOS">MO: Warrensburg: KMOS</option><option value="WMPN">MS: MPB</option><option value="KUSM">MT: Montana PBS</option><option value="WTVI">NC: Charlotte: WTVI</option><option value="WUNC">NC: UNC-TV</option><option value="KFME">ND: Prairie PTV</option><option value="KTNE">NE: Nebraska ETV</option><option value="WENH">NH: NHPTV</option><option value="WNJT">NJ: NJTV</option><option value="KNME">NM: Albuquerque: KNME</option><option value="KRWG">NM: Las Cruces: KRWG</option><option value="KENW">NM: Portales: KENW</option><option value="KLVX">NV: Las Vegas: Vegas PBS</option><option value="KNPB">NV: Reno: KNPB</option><option value="WMHT">NY: Albany: WMHT</option><option value="WNED">NY: Buffalo: WNED</option><option value="WNET">NY: New York: Thirteen</option><option value="WLIW">NY: New York: WLIW</option><option value="WCFE">NY: Plattsburgh: Mountain Lake PBS</option><option value="WXXI">NY: Rochester: WXXI</option><option value="WCNY">NY: Syracuse: WCNY</option><option value="WSKG">NY: Vestal: WSKG</option><option value="WPBS">NY: Watertown: WPBS</option><option value="WOUB">OH: Athens: WOUB</option><option value="WBGU">OH: Bowling Green: WBGU</option><option value="WCET">OH: Cincinnati: CET Connect</option><option value="WVIZ">OH: Cleveland: WVIZ/PBS Ideastream</option><option value="WOSU">OH: Columbus: WOSU</option><option value="WCET">OH: Dayton: Think TV</option><option value="WNEO">OH: Kent: Western Reserve PBS</option><option value="WGTE">OH: Toledo: WGTE</option><option value="KRSC">OK: Claremore: KRSC</option><option value="OETA">OK: OETA</option><option value="KSYS">OR: Medford: KSYS</option><option value="KOPB">OR: OPB</option><option value="WLVT">PA: Bethlehem: WLVT</option><option value="WQLN">PA: Erie: WQLN</option><option value="WITF">PA: Harrisburg: WITF</option><option value="WHYY">PA: Philadelphia: WHYY</option><option value="WYBE">PA: Philadelphia: WYBE</option><option value="WQED">PA: Pittsburgh: WQED</option><option value="WVIA">PA: Pittston: WVIA</option><option value="WPSX">PA: University Park: WPSU</option><option value="WMTJ">PR: San Juan: WMTJ</option><option value="WSBE">RI: Rhode Island PBS</option><option value="WRLK">SC: SCETV</option><option value="KUSD">SD: SDPB</option><option value="WTCI">TN: Chattanooga: WTCI</option><option value="WCTE">TN: Cookeville: WCTE</option><option value="WKNO">TN: Cordova: WKNO</option><option value="WSJK">TN: Knoxville: East Tennessee PBS</option><option value="WLJT">TN: Martin: WLJT</option><option value="WDCN">TN: Nashville: NPT</option><option value="KACV">TX: Amarillo: Panhandle PBS</option><option value="KLRU">TX: Austin: KLRU</option><option value="KAMU">TX: College Station: KAMU</option><option value="KEDT">TX: Corpus Christi: KEDT</option><option value="KERA">TX: Dallas: KERA</option><option value="KCOS">TX: El Paso: KCOS</option><option value="KMBH">TX: Harlingen: KMBH</option><option value="KUHT">TX: Houston: Houston PBS</option><option value="KNCT">TX: Killeen: KNCT</option><option value="KTTZ">TX: Lubbock: KTTZ</option><option value="KOCV">TX: Midland: Basin PBS</option><option value="KLRN">TX: San Antonio: KLRN</option><option value="KBYU">UT: Provo: KBYU</option><option value="KUED">UT: Salt Lake City: KUED</option><option value="WHTJ">VA: Charlottesville: WHTJ</option><option value="WVPT">VA: Harrisonburg: WVPT</option><option value="WHRO">VA: Norfolk: WHRO</option><option value="WCVE">VA: Richmond: Community Idea Stations</option><option value="WBRA">VA: Roanoke: Blue Ridge PBS</option><option value="WTJX">VI: St. Thomas: WTJX</option><option value="WETK">VT: Vermont PTV</option><option value="KWSU">WA: Pullman: KWSU</option><option value="KTNW">WA: Richland: KTNW</option><option value="KCTS">WA: Seattle: KCTS</option><option value="KSPS">WA: Spokane: KSPS</option><option value="KBTC">WA: Tacoma: KBTC</option><option value="KYVE">WA: Yakima: KYVE</option><option value="WMVS">WI: Milwaukee: MPTV</option><option value="WPNE">WI: WPT</option><option value="WSWP">WV: WVPBS</option><option value="KCWC">WY: Wyoming PBS</option>							</select>
						</div>
					</div>
					<div id="form-optins">
						<div class="form-input">
							<input type="checkbox" name="optin_pbs"  />
							<label for="optin_pbs">You may share my entry with my local PBS station.</label>
						</div>
						<div class="form-input">
							<input type="checkbox" name="optin_masterpiece"  />
							<label for="optin_masterpiece">I would like to receive emails related to MASTERPIECE.</label>
						</div>
						<div class="form-input">
							<input type="checkbox" name="optin_visitbritain"  />
							<label for="optin_visitbritain">I would like to receive travel information via email from <a href="http://www.visitbritain.com" target="pbs_sweep_visitbritain">VisitBritain</a>, Britain’s national tourism agency.</label>
						</div>
						<p>By clicking Submit, I certify that I am 18 years of age or older (or the age of majority in the jurisdiction of my residence, whichever is older) and represent that I have read and agree to the <a href="/official-rules?PHPSESSID=11vvnqd3nt534q1a6u5652rbo0">OFFICIAL RULES</a> of the 2015 <em>Downton Abbey</em> Sweepstakes.</p>
						<input name="facebook_id" value="" id="enter-facebook-id" type="hidden" />
						<input name="source" value="" type="hidden" />
												<input type="submit" value="Submit" id="form-submit" />
					</div>
					<div id="form-progress" style="display:none;"></div>
				</form>
				<script type="text/javascript">
					window.defer = window.defer || [];
					
					window.defer.push({
	p:	function(){ return !!document.getElementById('carousel'); },
	h:	function(){
			var carousel = document.getElementById('carousel');
			
			var carouselAnimationMethod = 'visibility';
			
			if ( !defer.isNil(carousel) )
			{
				var carouselWidth	= 685;
				var slideCount		= 5;
				var dotsFragment	= document.createDocumentFragment();
				
				var carouselTimerID = null;
				var currentSlideIndex = 0;
				
				var carouselUL = document.getElementById('carousel-slides');
				
				var dotsUL			= document.createElement("UL");
				dotsUL.id			= "carousel-dots";
				
				var dotsArray		= [];
				
				function makeSlideActive( index )
				{
					//document.getElementById('carousel-slide-'+index).scrollIntoView();
// 								carouselUL.scrollLeft = ( currentSlideIndex * carouselWidth );
					
					for( var i=0 ; i < slideCount ; i++ )
					{
						var slideElement = document.getElementById('carousel-slide-'+i);
						
						if( carouselAnimationMethod == 'visibility' )
						{
							if( i == index )
							{
								slideElement.style.visibility = 'visible';
							} else {
								slideElement.style.visibility = 'hidden';
							}
						}
					}								
				}
				
				function animate( newIndex )
				{
					if( defer.isNil( newIndex) || isNaN( newIndex ) )
					{
						currentSlideIndex = ( currentSlideIndex >= slideCount - 1 ) ? 0 : currentSlideIndex + 1;
					} else {
						currentSlideIndex = newIndex;
					}
												
					makeSlideActive( currentSlideIndex );
					
					for( var i=0 ; i < slideCount ; i++ )
					{
						var dot = dotsArray[i];
						
						if( i == currentSlideIndex )
						{
							dot.className += " active ";
						} else {
							dot.className = String(dot.className).replace('active','');
						}
					}
				}
				
				function stopAnimation()
				{
					if( carouselTimerID != null )
					{
						window.clearInterval(carouselTimerID);
						carouselTimerID = null;
					}
				}
				
				function startAnimation()
				{
					stopAnimation();
					
					carouselTimerID = window.setInterval(animate, 5000);
				}
				
				function newDot(index){
					var dot			= document.createElement("LI");
					var index		= index;
					dot.onclick = function(evt){
						stopAnimation();
						animate(index);
					}
					return dot;
				};
				
				for( var i=0 ; i < slideCount ; i++ )
				{
					var dot = newDot(i);
					dotsArray.push( dot );
					dotsUL.appendChild( dot );
				}
				
				if( !!carouselUL && carouselUL.tagName == "UL" )
				{
				
					// remove errant text nodes
					for( var i=0 ; i < slideCount ; i++ )
					{
						var node = carouselUL.childNodes.item(i);
						defer.log( node );
						if( node.nodeType == 3 )// text nodes
						{
							carouselUL.removeChild(node);
						} else if( node.nodeType == 1 ) {
							
							if( carouselAnimationMethod == 'translate' )
							{
								//node.style.webkitTransform = 'translate(-100px,-100px)';
								
/*
								var x = 0;
								
								if( 
								
								node.style.webkitTransform = 'translate(-' + ( ? ) + 'px,0)'
*/
							}
						}
						delete node;
					}
				}
				
				dotsFragment.appendChild( dotsUL );
				carousel.appendChild( dotsFragment );
				animate(0);
				startAnimation();
				defer.log('start');
			}
	},
	o:	{}
});/** @license
 * "defer.js" and "defer-xhr.js" are trademarks of Ian J. Wessman
 *
 * Copyright 2014 Ian J. Wessman
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * v.0.1
 */
;(function(){
	window.defer = window.defer || [];
	
	window.defer.push({
		p:		function(){ return true; },
		h:		function(){
						var defer = window.defer;
						var isNil = defer.isNil;
						var isFunction = defer.isFunction;
						
						function deferXHR( url , method , username , password )
						{
							var self = this , request = null , successHandler = null , failureHandler = null;
							
/*
							handler template (context is the request):
							function( event , parsed ){}
*/
							
							if( isNil( method ) == true )
							{
								method = "GET";
							}
							
							if( isNil( username ) == true )
							{
								username = "";
							}
							
							if( isNil( password ) == true )
							{
								password = "";
							}
							
							request = new XMLHttpRequest();
							
							function deferXHR_readyStateChange( evt )
							{
								if( request.readyState == 4 )
								{
									// successful only with 2XX,3XX status codes
									var handler = ( ( Math.floor( request.status / 200 ) ) == 1 ) ? successHandler : failureHandler;
									
									if( isFunction( handler ) == true )
									{
										try
										{
											handler.call( request , evt , JSON.parse(xhr.responseText) );
										} catch( err ) {
											handler.call( request , evt );
										}
									}
								}
							}
							
							function deferXHR_send( data , successFunction , failureFunction )
							{
								if( isFunction( successFunction ) == true )
								{
									successHandler = successFunction;
								}
								if( isFunction( failureFunction ) == true )
								{
									failureHandler = failureFunction;
								}
								
								if( data == null )
								{
									data = undefined;
								}
								
								try
								{
									request.send( data );
								} catch(err) {
									defer.log('defer.xhr failure',err);
									if( !isNil( failureHandler ) )
									{
										failureHandler.call(request);
									}
								}
							}
							
							function deferXHR_getRequest()
							{
								return request;
							}
							
							function deferXHR_setPOSTFormData( postData )
							{
								request.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
								request.setRequestHeader("Content-length", postData.length);
								request.setRequestHeader("Connection", "close");
							}
							
							if( !!request )
							{
								request.open( method , url , true , username , password );
								
								request.onreadystatechange = deferXHR_readyStateChange;
							} else {
								//FIXXX: throw error?
							}
							
							self.getRequest = deferXHR_getRequest;
							self.setPOSTFormData = deferXHR_setPOSTFormData;
							self.send = deferXHR_send;
							
							return self;
						}
						
						// export
						defer['xhr'] = deferXHR;
		},
		o:		{}
	});
})();


window.defer.push({
	p:	function(){ return !!document.getElementById('form-fbconnect-btn'); },
	h:	function(){
		var fbBtn = document.getElementById('form-fbconnect-btn');
		
		fbBtn.onclick = function(event){
			var isFBLoaded = false;
			var entryForm = document.getElementById('form');
			var formProgress = document.getElementById('form-progress');
			formProgress.style.display = "block";
		
			window.fbAsyncInit = function() {
				isFBLoaded = true;
				
				// JS loaded only after FB JS is ready
				FB.init({
					appId      : '1424393704457487',
					cookie     : true,  // enable cookies to allow the server to access the session
					xfbml      : false,  // parse social plugins on this page
					version    : 'v2.1' // use version 2.1
				});
				
				var isFBLoggedIn = false;
				var userFieldsGranted = [];
				
				function hideFBC(){
					fbBtn.style.display = 'none';
					document.getElementById('form-or').style.display = 'none';
					formProgress.style.display = "none";
				}
				
				function scrambleFormInput( elem ){
					elem.type		= 'password';
					elem.value		= 'arbitrarytext';
					elem.disabled	= true;
				}
				
				function fbLoginCheck( facebookID )
				{
					window.defer.push({
						p:	function(){ return !!window.defer.xhr; },
						h:	function(){
									var req = window.defer.xhr('/fb_login_check.php','POST');
									
									var postString = "facebook_id=" + facebookID;
									
									req.setPOSTFormData( postString );
									
									req.send(postString,function success(evt){
										switch( this.response )
										{
											case '200':
													// do important stuff
													var fbOverrideElement		= document.createElement('input');
													fbOverrideElement.type		= 'hidden';
													fbOverrideElement.name		= 'fb_override';
													fbOverrideElement.value		= 'YES';
													
													entryForm.appendChild(fbOverrideElement);
													
													scrambleFormInput(entryForm['address']);
													scrambleFormInput(entryForm['zip']);
													scrambleFormInput(entryForm['city']);
													scrambleFormInput(entryForm['state']);
													scrambleFormInput(entryForm['email']);
													
													entryForm['station'].disabled = true;
													
													
													hideFBC();
													break;
											case "You've already entered today. Try again tomorrow.":
													hideFBC();
													var formError = document.getElementById('formerror');
													formError[_pbsSweeps2015.util.innerText] = this.response;
													entryForm.className += ' has-formerror ';
													formError.style.display = 'block';
													// show error
													break;
											case '404':
											default:
													entryForm['address'].focus();
													break;
										}
									});
							} ,
						o:	{}
					});
				}
				
				function getUserData()
				{
				
					// figure out what we're allowed to do
					FB.api('/me/permissions',function(response){
						if( !!response.data && response.data.length > 0 )
						{
							for( var i=0 , item=null ; i < response.data.length ; i++ )
							{
								item = response.data[i];
								if( item.status == 'granted' )
								{
									userFieldsGranted.push(item.permission);
								}
							}
						}
						
						var fields = 'first_name,last_name,email,age_range';
						var fields = [];
						
						for( var i=0 ; i < userFieldsGranted.length ; i++ )
						{
							switch( userFieldsGranted[i] )
							{
/*
								case 'email':
													fields.push('email');
													break;*/
								case 'user_birthday':
													fields.push('birthday');
								case 'public_profile':
													fields.push('first_name');
													fields.push('last_name');
													fields.push('age_range');
													break;
								default:
													fields.push(userFieldsGranted[i]);
							}
						}
						
						FB.api('/me', {fields: fields.join(',')}, function(response) {
							//FIXXX: check for errror?
							
							formProgress.style.display = "none";
							
							if( response.age_range.min < 18 )
							{
								alert('You must be over 18 to enter.');
							} else {
								
								if( !!entryForm )
								{
									var fbID = '';
									
									window.defer.forOwnIn(this,response,function(key,value){
									

										try {														
											switch( key )
											{
												case 'email':
															entryForm['email'].setAttribute('value', value);
															break;
												case 'first_name':
															entryForm['name_first'].setAttribute('value', value);
															break;
												case 'last_name':
															entryForm['name_last'].setAttribute('value', value);
															break;
												case 'id':
															fbID = value;
															entryForm['facebook_id'].setAttribute('value', value);
															break;
												//FIXXX:more options once FB approves
											}
										} catch(e){;}

									});
									
									//FIXXX: check database for matching FB ID
									
									if( entryForm['name_last'].value != '' )
									{
										
										entryForm['address'].focus();
									}
									
									if( fbID != '' )
									{
										fbLoginCheck( fbID );
									}
								}
							}
							
							hideFBC();
						});
					});
				

				}
				
				function fbLoginStatusHandler (response) {
					defer.log('statusChangeCallback');
					defer.log(response);
					// The response object is returned with a status field that lets the
					// app know the current login status of the person.
					// Full docs on the response object can be found in the documentation
					// for FB.getLoginStatus().
					if (response.status === 'connected') {
						// Logged into your app and Facebook.
						isFBLoggedIn = true;
						
						getUserData();
					} else if (response.status === 'not_authorized') {
						// The person is logged into Facebook, but not your app.
						isFBLoggedIn = false;

						FB.login(function(response) {
							// handle the response
							
							var grantedScopes = response.authResponse.grantedScopes;
							if( response.status === 'connected' && 
								grantedScopes.indexOf('public_profile') != -1 )
							{
									getUserData();

							} else {
								hideFBC();
							}
						}, {
							scope: 'public_profile,email,user_birthday', 
							return_scopes: true
						});
						

					} else {
						// The person is not logged into Facebook, so we're not sure if
						// they are logged into this app or not.
						FB.login(function(response) {
						
						// FIXXX: do stuff
							if (response.status === 'connected') {
								// Logged into your app and Facebook.
								getUserData();
							}
							// all other options lead to 'no'
							hideFBC();
						});
					}
				}
				
				FB.getLoginStatus(fbLoginStatusHandler);
			};
			window.defer.appendScript("//connect.facebook.net/en_US/sdk.js","async");
		}
	},
	o:	{
		onFail: function(){
			document.getElementById('form-progress').style.display = "none";
		}
	}
});window.defer.push({
	p:	function(){ return !!_pbsSweeps2015.util.innerText && !!document.getElementById("form"); } ,
	h:	function(){
		var form = document.getElementById("form");
		var formError = document.getElementById("formerror");
/*
		
		// shim inputs for non-placeholder browsers
		for( var i=0 ; i < form.elements.length ; i++ )
		{
			_pbsSweeps2015.util.inputPlaceholder(form.elements[i]);
		}
		
*/
		var formErrorMsgList = [];
		
		var fbOverride = false;
		
		function isFBOverride()
		{
			if( fbOverride === false )
			{
				var fbOverrideElement = form['fb_override'];
				
				fbOverride = (fbOverrideElement !== undefined && fbOverrideElement.value == 'YES' );
			}
			
			return fbOverride;
		}
		
		function validateInput( inputElement )
		{
			var maxlength = parseInt( inputElement.getAttribute('maxlength') );
			var minlength = parseInt( inputElement.getAttribute('minlength') );
			
			var pattern = inputElement.getAttribute('pattern');
			if( !defer.isNil(pattern) && pattern != '' )
			{
				pattern = new RegExp( pattern , 'i' );
			} else {
				pattern = null;
			}
			
			var inputType = inputElement.getAttribute('type');
			
			if( inputType === null )
			{
				inputType = String(inputElement.nodeName).toLowerCase();
			}
			
			switch( inputType )
			{
				case 'checkbox':
								if( !defer.isNil(pattern) && String(pattern) != '' )
								{
									return pattern.test( inputElement.value );
								}
								break;
				case 'select':
								if( inputElement.value == "" )
								{
									return false;
								}
								break;
				case 'zip':
				case 'address':
				case 'city':
				case 'state':
				case 'email':
				case 'text':
				default:
//												(new RegExp('^[a-z0-9\.]{1,'+ (isNaN(maxlength) ? '' : String(maxlength) +'}$','i')).test(inputElement.value);
								if( pattern === null )
								{
									if( !isNaN(maxlength) && !(String(inputElement.value).length <= maxlength) )
									{
										return false;
									}
									if( !isNaN(minlength) && !(String(inputElement.value).length >= minlength) )
									{
										return false;
									}
								} else {
									return pattern.test( inputElement.value );
								}
								break;
			}
			
			var required = inputElement.getAttribute('required');
			if( required != null && (/true|required/i).test(String(required)) )
			{
				if( String(inputElement.type) == 'checkbox' )
				{
					if( inputElement.checked === false )
					{
						return false;
					}
				} else {
					if( String(inputElement.value).length == 0 )
					{
						return false;
					}
				}
			}
			
			return true;
		}
			
		function emptyFormErrorElement()
		{
			if( formError['innerHTML'] != undefined )
			{
				formError['innerHTML'] = '';
			}
/*
			for( var i=0 ; i < formError.childNodes.length ; i++ )
			{
				formError.removeChild(formError.childNodes.item(i));
			}
*/
		};
		
		form.onsubmit = function(evt){
//								return true;
//							evt.preventDefault();
			var hasErrors = false;
			
			if( !(isFBOverride()) )
			{
		
				for( var i=0 , formElement = null , result=false , msg; i < form.length ; i++ )
				{
					formElement = form.elements[i];
					result = validateInput( formElement );
					
					if( result == false )
					{
						hasErrors = true;
						if( String(formElement.className).indexOf( 'invalid') == -1 )
						{
							formElement.className += ' invalid ';
						}
						msg = formElement.getAttribute('data-errormsg');
						if( !defer.isNil(msg) )
						{
							formErrorMsgList.push( formElement.getAttribute('data-errormsg') );
						}
					} else {
						hasErrors = false || hasErrors;		// don't override an existing error flag
						formElement.className = (formElement.className).replace('invalid','');
					}
				}
				
				if( /QC|Quebec|Québec/i.test(form['state'].value) )
				{
					hasErrors = true;
					form['state'].className += ' invalid ';
					formErrorMsgList.push('Entries from Québec are not eligible.');
				}
			}
			
			if( hasErrors === true )
			{
				if( String(formElement.className).indexOf( 'invalid') == -1 )
				{
					form.className += ' has-formerror ';
				}

				emptyFormErrorElement();
				var msgFragment = document.createDocumentFragment();
				
				formErrorMsgList.reverse();
			
				while( formErrorMsgList.length > 0 )
				{
					msgFragment.appendChild(document.createTextNode(formErrorMsgList.pop()));

					if( formErrorMsgList.length > 0 )
					{
						msgFragment.appendChild(document.createElement('br'));
					}

				}
				
//								msgFragment.removeChild( msgFragment.lastChild );		// remove unnecessary <br />
				
				formErrorMsgList = [];//assert
				
				formError.appendChild(msgFragment);
				formError.style.display = 'block';
				
				return false;

			} else {
				form.className = (form.className).replace(' has-formerror ','');
				formError.style.display = 'none';
				// empty out child nodes
				emptyFormErrorElement();
//								form.submit();
				return true;
			}

			return false;
		};
		
		_pbsSweeps2015.form = { isFBOverride: isFBOverride ,
								emptyFormErrorElement: emptyFormErrorElement };
	} ,
	o:	{}
});


/*! ZIP CODE */
window.defer.push({
	p:	function(){ return !!window.defer.xhr && !!_pbsSweeps2015.form.isFBOverride && !!document.getElementById('form-input-zip').children[1]; },
	h:	function(){
		var form		= document.getElementById('form');
		var inputZip	= form['zip'];
		var inputCity	= form['city'];
		var inputState	= form['state'];
		
		window.defer.addEventListener( inputZip , "blur" , function(evt){
			var zipValue = String(inputZip.value);
			
			function setValue( element , value )
			{
				if( !!element['setAttribute'] )
				{
					element.setAttribute( 'value' , value );
				} else {
					element.value = value;
				}
			}
			
			function setSelected( element )
			{
				if( false && !!element['setAttribute'] )
				{
					element.setAttribute('selected','selected');
				} else {
					element.selected = 'selected';
				}
			}
			
			function setStation( city , state )
			{
				var stationSelect = form['station'];
				var lastOptionElement = null , stationValue = null , stationFound = false;
				
				if( !!stationSelect )
				{
					var stationMatch = null , stationRegExp = /^([A-Z]{2}): ([A-Z ]+):/i;
					var i=0 , optionElement = null , optionCount = stationSelect.children.length;
					var textContent = ( !!stationSelect['textContent'] ) ? 'textContent' : 'innerText';
					while( stationFound === false && i < optionCount )
					{
						optionElement = stationSelect.children[i];
						
// 									defer.log( optionElement[textContent] );
						
						stationMatch = stationRegExp.exec( optionElement[textContent] );
						
						if( stationMatch != null )
						{
							if( stationValue != null && stationMatch[1] != state )
							{
								// gone too far, end search here
								stationFound = true;
							} else if( stationMatch[1] == state )	// found the right state
							{
								if( stationMatch[2] == city )
								{
									stationFound = true;
								}
								stationValue = optionElement.value;
								
								
								
								lastOptionElement = optionElement;
// 											alert( optionElement.value );
// 											setValue( stationSelect , optionElement.value );
							}
						}
						
						i++;
					}
					
					if( stationFound === true && stationValue != null && lastOptionElement != null )
					{
						setSelected( lastOptionElement );
					}
					
				}
			}
			
			var usZipRegex = /^[0-9]{5}$/;
			
			if( !_pbsSweeps2015.form.isFBOverride() && zipValue.match(usZipRegex) != null )
			{
				window.defer.xhr('/assets/zipcode/'+zipValue.substr(0,1)+'/'+zipValue+'.txt').send(	null,
																			function success(evt){
																				var responseSplit = (this.response.replace('\n','')).split(',');
																				if( responseSplit.length == 3 )
																				{
																					setValue( inputCity , responseSplit[1] );
																					setValue( inputState , responseSplit[2] );
																					
																					try {
																						form['optin_pbs'].checked			= true;
																						form['optin_masterpiece'].checked	= true;
																					} catch(e) {;}
																					
//																					setStation( responseSplit[1] , responseSplit[2] );
																					
																					form['email'].focus();
																				}
																			},
																			function fail(evt){
																				defer.log('failed');
																				defer.log(this);
																				defer.log(evt);
																			});
			} else if( !_pbsSweeps2015.form.isFBOverride() && zipValue.match(/^([A-Z][0-9][A-Z][\ ]{0,1}[0-9][A-Z][0-9]){1}$/) != null ) {
				window.defer.xhr('/assets/zipcode/CA/'+zipValue.substr(0,3)+'.txt').send(	null,
																			function success(evt){
																				var responseSplit = (this.response.replace('\n','')).split(',');
																				if( responseSplit.length == 3 )
																				{
																					if( /QC/i.test(responseSplit[2]) )
																					{
																						form.className += ' has-formerror ';
																						form['state'].className += ' invalid ';
																						alert('Entries from Québec are not eligible.');
																					} else {
																						setValue( inputCity , responseSplit[1] );
																						setValue( inputState , responseSplit[2] );
																						
	//																					setStation( responseSplit[1] , responseSplit[2] );
																						
																						form['email'].focus();
																					}
																				}
																			},
																			function fail(evt){
																				defer.log('failed');
																				defer.log(this);
																				defer.log(evt);
																			});

			}
		} );
		
	},
	o:	{}
});					
					window.defer.push({
						p:	function(){ return !!document.getElementById('content-landing-visitbritain') && !!window.ga; } ,
						h:	function(){
							document.getElementById('content-landing-visitbritain').onclick = function(evt){
								ga('send', 'pageview', {
									'page': '/external/lovewall.visitbritain.com/en/14/film-and-tv/',
									'title': 'Visit Britain'
								});
							};
						},
						o:	{}
					});

				</script>
								
				<p class="legalfooter"><strong>*NO PURCHASE NECESSARY.</strong> Sweepstakes begins at 12:01 AM CST on December 15, 2014 and ends at 11:59PM CST on March 15, 2015. Only open to the legal residents of the United States, Puerto Rico, Guam, the US Virgin Islands, the District of Columbia, and Canada (excluding the province of Quebec). 18 years of age or older (or the age of majority in the jurisdiction of their residence, whichever is older) at the time of entry. Grand Prize travel must take place July 26, 2015 to July 31, 2015 (flight dates subject to Delta Airlines availability). See <a href="/official_rules.php?PHPSESSID=11vvnqd3nt534q1a6u5652rbo0">Official Rules</a> for full details including eligibility restrictions and prize limitations. Void where prohibited.</p>
				
			</div>
		</div>
		<script type="text/javascript" async="async" src="/assets/js/defer.min.js?20141214"
					onload="(function(){var w=window,t=(new Date()).getTime();w.defer = w.defer||[];w.defer.push({p:function(){return !!_pbsSweeps2015.timing && !!w.ga},h:function(){_pbsSweeps2015.timing.loadTimeToAnalytics('JS Load','defer.js');},o:{}})})();"></script>
		<script type="text/javascript" async="async" src="/assets/js/_pbsSweeps2015.js?20141214"></script>
		<script type="text/javascript">
			(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
			(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
			m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
			})(window,document,'script','//www.google-analytics.com/analytics.js','ga');
			
			ga('create', 'UA-57384295-1', 'auto');
			ga('send', 'pageview');
		</script>

		<!--[if lt IE 9]>
			<script type="text/javascript">

				(function(){
					var css = document.getElementById('css');
					if( !!css && !!css['href'] )
					{
						css.href = String(css.href);
					};
				})();

			</script>
		<![endif]-->

	</body>
</html>";i:2;s:4:"6718";}