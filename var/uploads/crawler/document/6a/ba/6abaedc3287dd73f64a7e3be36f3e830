a:3:{i:0;s:21:"http://fredmeyer.com/";i:1;s:133734:"<!DOCTYPE html>

<html>
<head><head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="fragment" content="!" />
    <meta name="apple-itunes-app" content="app-id=584446630" />
    <meta name="google-play-app" content="app-id=com.fredmeyer.mobile" />
    <title>Fred Meyer</title>
    <link rel="shortcut icon" href="/static/ge45b4a5/image/favicon/fredmeyer.ico" />
    <link rel="icon" type="image/x-icon" href="/static/ge45b4a5/image/favicon/fredmeyer.ico" />

    <link rel="stylesheet" type="text/css" href="/static/ge45b4a5/stylesheet/application-site-header-footer.css" />
    <link rel="stylesheet" type="text/css" href="/static/ge45b4a5/stylesheet/application-site.css" />

    
    

    

    <script type="text/javascript">
        
         window.staticContentPath = '/static/ge45b4a5';
         
        window.localEnvironment = {};
    </script>
    <script src="/static/ge45b4a5/javascript/vendor/html5shiv.js"></script>
    <script src="/static/ge45b4a5/javascript/vendor/bowser.js"></script>
    <script src="/static/ge45b4a5/javascript/source/banner/unsupportedBrowsers.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.9/angular.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.9/angular-sanitize.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.9/angular-touch.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.9/angular-route.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.9/angular-resource.min.js"></script>
    <script src="/static/shoppinglist/api/shopping-list-api.js"></script>
    <script src="/static/ge45b4a5/javascript/q.js"></script>

    
    <script src="/static/ge45b4a5/javascript/init.js"></script>
    <script src="/static/ge45b4a5/javascript/require.js"></script>
    <script src="/static/ge45b4a5/javascript/boot.prod.js"></script>
    

    <script type="text/javascript">
    requireQ(["everything"], function() {
  angular.module('environment', []).factory('EnvLookup', function() {
  return {
  bannerName: 'FredMeyer',
  contextPath: '',
  divisionBanner: 'FREDMEYER',
  firstName: null,
  loggedIn: false,
  enrolledInCommunityRewards: null,
  hasLoyaltyCard : 'undefined',
  isBeingPrerenderedForSearchCrawler : false,
  divisionNumber: null,
  storeCode: null,
  deliBakeryLinkEnabled : 'true',
  bannerParticipates: null,
  storeParticipates: null,
  kingsoopersParticipates : null,
  externalUrls: null,
  internalUrls: null,
  hasPharmacy: 'true',
  hasDeliBakery: 'true',
  bannerSiteDomain: 'FredMeyer.com',
  bannerSiteName: 'Fred Meyer',
  plusCardName: 'Rewards\u00AE Card',
  addToListEnabled: false,
  noOfAllowedAttempts: '2',
  changePasswordPromptDate: '2014-May-27',
  heartBleedMessage: 'Our records indicate that you haven\'t changed your password recently. For security purposes, we recommend that you reset your password at this time.',
  isHeartBleedEnabled: 'true',
  contentVersion: '14ba3b7ea04',
  isCouponSearchEnabled: true,
  isCouponSearchEnabledBanner: true,
  isRecipeSearchEnabledBanner: true,
  isProductSearchEnabledBanner: false,
  isSearchServiceContentEnabled: true,
  isSearchServiceRecipesEnabled: true,
  couponPromotion: false,
  isCouponPromotionsEnabled: true,
  isWeeklyAdsEnabledForFM: false,
  couponPromotionPublishedAs: null,
  couponPromotionTabName: null,
  couponPromotionFilterTag: null,
  couponPromotionViewAllURL: null,
  couponPromotionImageId: null,
  couponPromotionMessageHeader: null,
  couponPromotionMessageText: null,
  couponPromotionButtonText: null,
  couponPromotionButtonAltId: null,
  couponPromotionButtonUrl: null,
  couponPromotionNotLoggedInMessageHeader: null,
  couponPromotionNotLoggedInMessageText: null,
  couponPromotionNotLoggedInButtonText: null,
  couponPromotionNotLoggedInButtonAltId: null,
  couponPromotionNotLoggedInButtonUrl: null,
  homeShopCookieName: 'eComm',
  homeShopBaseUrl: '/onlineshopping',
  homeShopShopNowUrl: '/onlineshopping',
  homeShopMyAccountEnabled: false,
  homeShopPickStoreServiceIntigrationEnabled: false,
  homeShopSecondPickStoreEnabled: false,
  searchServiceUrl:null,
  isRecipeRatingEnabled:false,
  isRecipeFavoriteEnabled:true,
  isFacebookSharingEnabled:false,
  isPinterestSharingEnabled:true,
  isTwitterSharingEnabled:true,
  couponSpecialPromotionsEmailPreferenceId: 'Weekly Circular',
  couponSpecialPromotionsWebPostFlag: 'WeeklyAd',
  couponSpecialPromotionsFilteredTags: 'HOT',
  couponSpecialPromotionsGroupOptionId: 'Special Promotions and Opportunities',
  couponSpecialPromotionsEnabled: true,
  fredMeyerGrBaseDomain: 'www.fredmeyer.com',
  fredMeyerCatalogId: '10551',
  fredMeyerStoreId: '11204',
  fredMeyerInstoreMenuEndpoint: 'https://www.kroger.com',
  fredMeyerGiftRegistryAutocompleteUrl: 'https://www.fredmeyer.com/',
  isManageAltIdEnabled: false,
  OnlineOrderingAvailableCatalog: '',
  OnlineOrderingBrandName: 'Online Shopping',
  storeLocatorKey: 'AjxJ7VdncRQa6sl8Y-S6jdiqgGDzj7IKYT-0cvaIJsrvGuWk19f2OVnC2ym-_sGD',
  callCenterPhoneNumber: '1-800-576-4377',
  storeLocatorOptions : {
    text: 'Store',
    showServices: true,
    showAllBanners: true,
    showFuel: true,
    brand: 'FRED'
  },
  bannerIsAuthenticated : true,
  wishabiWeeklyAdEnvironment: 'prod',
  divisionMap : {'011':'Atlanta','034':'Southwest','024':'Louisville','014':'Cincinnati','025':'Delta','026':'Nashville','016':'Columbus','018':'Michigan','029':'MidAtlantic','021':'Central'},
  listApiPath: '/api/shoppinglist',
  isPinnedShoppingListEnabled: true,
  isPinnedShoppingListLinkOnlyMode: true,

  pid: '',
  channel: 'web',
  loyalMember: null,
  omnitureAccount: 'krgrfredmeyerprod,krgrglobalprod',
  };
  });
});
  window.localEnvironment.flash = {
  slotContent: []
  }
  
</script>
    <script type="text/javascript">
  requireQ(["everything"], function() {
  angular.module('featureManager', []).factory('FeatureManager', function() {
    var activeFeatures = 'SEARCH_SERVICE_CONTENT_TOGGLE,SEARCH_SERVICE_RECIPE_TOGGLE,TOPIC_URL_OPTIMIZED,ECSB_CUSTOMER_GET_PROFILE,cpsToggleGroupH,ECSB_SECURITY_CHALLENGE_QUESTIONS,ECSB_CREATE_ACCOUNT__EMAIL_PREFERENCES,ECSB_LOYALTY_CARD_UPDATES,ECSB_SMART_LINK_TOKEN,LEGACYSEO,PRERENDER,ECSB_UPDATE_PROFILE,ECSB_COMMUNITY_REWARDS,ECSB_LOYALTY_PROGRAMS,ECSB_FRYS_PROGRAMS,AKAMAI_EDGE_CONTROL_HEADER'.split(',');

  return {
    isActive: function(name) {
      return $.inArray(name, activeFeatures);
    }
  };
  });

   });
  window.localEnvironment.flash = {
  slotContent: []
  }

  </script>
</head>

</head>
<script type="text/javascript">
window.localEnvironment.servicesOffered = {
  slotContent: ['54c1395084ae96ad9ff47402','54c1395084ae96ad9ff473ff','54c1395084ae96ad9ff473fe','54c1395084ae96ad9ff473fd','54c1395084ae96ad9ff473f2','54c1395084ae96ad9ff473f1'],
    attributes : ''
};
</script>
<body ng-really-cloak="true" id="ng-app" style="display:none;">
<scroll-to-top></scroll-to-top>

<span id="changeStoreContainer" class="slot">

  <script>requireQ(["everything"], function() {
  melange.gadgets.changeStoreController = function () {
    return function ($rootScope,
                     $scope,
                     windowReload,
                     StoreLocator,
                     StoreFunctions,
                     AccountService,
                     BrowserVersion,
                     Beacon,
                     timeoutService,
                     EnvLookup,
                     triggerChangeStoreGadgetService) {
      var loggedIn = EnvLookup.loggedIn;
      var init = function () {
        $scope.showChangeStore = false;
        $scope.storeLocatorText = EnvLookup.storeLocatorOptions.text;
        resetSearchFields();
      };

      triggerChangeStoreGadgetService.onTrigger(function () {
        $rootScope.$broadcast('closeStoreReminder');
        $scope.showChangeStore = true;
        $scope.storeSearchTerm = "";
        findStores($.cookie("StoreZipCode"));
      });

      $scope.searchStore = function () {
        findStores($scope.storeSearchTerm);
      };

      var findStores = function (searchTerm) {
        if (searchTerm) {
          $scope.currentSearchTerm = searchTerm;
          StoreLocator.query({address: searchTerm, radius: '3000', maxResults: 5}, function (data) {
            $scope.results = data;
            if (_.isEmpty($scope.results)) {
              resetSearchFields();
              $scope.storeErrorText =
              "No " + $scope.storeLocatorText.toLowerCase() + "s were found within 3000 miles. Please provide additional address information or try again later.";
            } else {
              $scope.searchTerm = searchTerm;
              $scope.storeErrorText = "";
              $scope.showMoreResults = true;
            }
            getServiceIcons($scope.results);
          }, function () {
            resetSearchFields();
            $scope.storeErrorText =
            "We're sorry, the search service is not available right now. Please try your search again later.";
          });
        }
      };

      var getServiceIcons = function (stores) {
        if (stores) {
          _.each(stores, function (store) {
            StoreFunctions.getStoreServicesIcons(store);
          });
        }
      };

      var resetSearchFields = function () {
        $scope.searchTerm = "";
        $scope.results = [];
        $scope.storeErrorText = "";
        $scope.showMoreResults = false;
      };

      $scope.close = function () {
        resetSearchFields();
        $scope.showChangeStore = false;
      };

      $scope.makePreferredStore = function (store) {
        Beacon.registerPreferredStoreChange('Change Store Popup');
        timeoutService.timeout(function () {
          if (loggedIn)
            AccountService.update({'store': store}, function () {
              updatePreferredStoreAndCloseModal(store)
            }, function (response) {
              store.storeInformationErrorText = response.data.errorMessage != null ?
                response.data.errorMessage : "We're sorry, we are currently experiencing technical difficulties. Please try again later.";
              Beacon.registerPreferredStoreChangeError('Change Store Popup', 'server error');
            });
          else {
            updatePreferredStoreAndCloseModal(store);
          }
        }, 200);
      };

      var updatePreferredStoreAndCloseModal = function (store) {
        store.storeInformationErrorText = "";
        $scope.close();
        StoreFunctions.makePreferredStore(store);
        windowReload.reload();
      };

      $scope.getStoreNumber = function () {
        var newVar = StoreFunctions.getDivisionId() + StoreFunctions.getStoreNumber();
        return  newVar;
      };

      $scope.getDescription = function (store) {
        return StoreFunctions.getDescription(store);
      };
      init();
    }
  };

  melange.controller('changeStoreController', [
    '$rootScope', '$scope', 'windowReload', 'storeLocator.Service', 'storeFunctions.Service',
    'account.Service', 'browserVersion.Service', 'beacon.Service', 'timeoutService', 'EnvLookup', 'triggerChangeStoreGadgetService',
    melange.gadgets.changeStoreController()
  ]);
});</script>
  <span ng-controller="changeStoreController" class="scoped-to-banner">
    <div side-modal="showChangeStore" data-qa="change store side modal">
      <div class="side-modal-window-shade"></div>
      <div class="side-modal-inner">
        <h1 class="side-modal-heading" data-qa="change-preferred-store-heading">Change Preferred {{storeLocatorText}}</h1>
        <a class="side-modal-close-button" ng-click="close()" data-qa="change store close button">Close</a>
        <div class="side-modal-scrollable-area">
            <form ng-submit="searchStore()" name="searchStoreForm" class="change-store-search-field">
                <input data-qa="change store search input" name="store" type="text" ng-model="storeSearchTerm" ng-focus="true" placeholder="ZIP Code -OR- City,State" />
                <input type="submit" data-qa="change store submit button" value="Search" />
            </form>
            <div ng-show="storeErrorText" class="alert-error change-store-search-error" data-qa="change store search error">
              <p>{{storeErrorText}}</p>
            </div>
            <div class="change-store-content">
            <h3 ng-show="searchTerm" data-qa="change store results heading">Showing the top 5 results for {{searchTerm}}</h3>
            <ol>
              <li class="change-store-result" ng-repeat="store in results" data-qa="change store result">

                <h5 class="change-store-result-title" data-qa="change-store-result-title">{{ store.storeInformation.localName | uppercase }}</h5>
                <dl class="change-store-result-definition" name="clinicWaitTime" ng-if="store.waitTime">
                  <img src="/static/image/Clock_Blue_1x.png" />
                  <dt>Current Wait Time:</dt>
                  <dd data-qa="store locator result {{$index}} clinic wait time"><span>{{store.waitTime.description}}</span></dd>
                </dl>

                <div class="change-store-result-address" ng-bind-html="getDescription(store) | trusted" data-qa="change store result address"></div>

                <div data-qa="show-store-details">
                  <dl class="change-store-result-definition" name="storePhoneNumber" ng-show="store.storeInformation.phoneNumber">
                    <dt>{{storeLocatorText}} Phone:</dt>
                    <dd data-qa="change-store-result-store-phoneNumber">
                      <span phone-link="{{store.storeInformation.phoneNumber}}"></span>
                    </dd>
                  </dl>
                  <dl class="change-store-result-definition" name="pharmacyPhoneNumber" ng-show="store.pharmacyInformation.phoneNumber">
                    <dt>Pharmacy Phone:</dt>
                    <dd data-qa="change-store-result-pharmacy-phoneNumber">
                      <span phone-link="{{store.pharmacyInformation.phoneNumber}}"></span>
                    </dd>
                  </dl>
                </div>

                <dl class="change-store-result-definition -distance">
                  <dt>Distance:</dt>
                  <dd data-qa="change store result distance">{{ store.storeInformation.distance | roundToTwoDecimal}} miles</dd>
                </dl>

                <div class="change-store-result-preferred-indicator" ng-show="store.storeInformation.recordId == getStoreNumber()" data-qa="change store result indicate preferred store">This is My Preferred {{storeLocatorText}}</div>
                <input type="button" class="change-store-result-preferred-button" ng-hide="store.storeInformation.recordId == getStoreNumber()" ng-click="makePreferredStore(store)" value="Make Preferred {{storeLocatorText}}" data-qa="change store make result preferred store" />

                <div class="change-store-details-links">
                  <a data-qa="change-store-view-details" href="/storeHours?store={{store.storeInformation.recordId}}">View {{storeLocatorText}} Details</a>
                </div>

                <div ng-show="store.storeInformationErrorText" class="alert-error" data-qa="change store information {{$index}} error">
                  <p>{{store.storeInformationErrorText}}</p>
                </div>
              </li>
            </ol>
            <a class="change-store-more-results-link" ng-show="showMoreResults" data-qa="showMoreResults" ng-href="/storeLocator?storeSearchTerm={{currentSearchTerm}}&amp;distance=3000">More Results &gt;&gt;</a>
          </div>
        </div>
      </div>
    </div>
  </span>
</span>

<div class="responsive-body-wrapper" responsive-body="true">
  <div>
  <!--
  OnlineOpinion v5.6.5
  Released: 12/17/2012. Compiled 01/02/2013 10:54:34 AM -0600
  Branch: master 6f7c9076b20d959805996192556bbd12b2014c7d
  Components: Full
  The following code is Copyright 1998-2013 Opinionlab, Inc.  All rights reserved. Unauthorized use is prohibited. This product and other products of OpinionLab, Inc. are protected by U.S. Patent No. 6606581, 6421724, 6785717 B1 and other patents pending. http://www.opinionlab
  --><!-- INVITATION PROMPT MARKUP --><noscript>This JavaScript enables OnlineOpinion, a method for collecting secure feedback data.</noscript>
  <!-- IE 8 fix for handling the OpinionLab popup... -->
  <!--[if lt IE 9 ]>
  <script type="text/javascript">
    requireQ(["everything"], function() {
      (function () {
        var b = 0;

        function launchOOPopupInitOverride() {
          var h = this.options,
              g = h.newWindowSize || [545, 325],
              m = [parseInt((h.metrics.height - g[1]) / 2, 10), parseInt((h.metrics.width - g[0]) / 2, 10)],
              l, k, j = "location=no,status=no,width=" + g[0] + ",height=" + g[1] + ",top=" + m[0] + ",left=" + m[1],
              ie7 = OOo.Browser.IE && navigator.userAgent.search("MSIE 7") !== -1,
              ie8 = OOo.Browser.IE && navigator.userAgent.search("MSIE 8") !== -1;

          windowName = "OnlineOpinion";

          if (h.newWindow) {
            windowName = windowName + (b++)
          }

          h.metrics.time2 = (new Date()).getTime();
          h.metrics.type = "Popup";

          if (h.asm || ie8) {
            j += ",scrollbars=1"
          }

          l = OOo.appendOOForm(h, windowName);
          k = window.open(ie7 || ie8 ? h.commentCardUrl || "https://secure.opinionlab.com/ccc01/comment_card_d.asp?" + l.children[0].value : "", windowName, j);

          if (k && !ie7 && !ie8) {
            l.submit()
          }
        }

        OOo.extend(OOo.Ocode.prototype, {
          launchOOPopup: launchOOPopupInitOverride
        })
      }());
    });
  </script>
  <![endif]-->
  <!-- END: OnlineOpinion v5.6.5 -->

  <script>/*<![CDATA[*/
requireQ(["everything"], function() {
  melange.controller('melange.app.opinionLabController', ['$scope', '$rootScope', '$window', '$timeout', function($scope, $rootScope, $window, $timeout) {
    $scope.popupIsVisible = false;

    $scope.showPopup = function() {
      $scope.popupIsVisible = true;
    };

    $scope.hidePopup = function() {
      $scope.popupIsVisible = false;
    };

    $scope.showFeedback = function() {
      $scope.hidePopup();
      new OOo.Ocode({referrerRewrite:window.location.href.split('?')[0]}).show();
    };

    $rootScope.$on('showOpinionLabPopup', $scope.showPopup);

  }]);
});

/*]]>*/
</script>

  <div ng-controller="melange.app.opinionLabController" class="scoped-to-banner">
    <div id="oo_tab" class="oo_tab_right" tabindex="0" ng-click="showPopup()" ng-hide="popupIsVisible">
      <div data-qa="opinion_lab_feedback_link">
        <span></span>
      </div>
      <div class="screen_reader">Activate to launch feedback</div>
    </div>

    <div class="opinionlab-popup" side-modal="popupIsVisible" data-qa="opinionlab popup">
      <div class="side-modal-inner">
        <h1 class="side-modal-heading">Feedback</h1>
        <div class="side-modal-close-button" ng-click="hidePopup()" data-qa="opinionlab popup close button">Close</div>
        <div class="side-modal-scrollable-area">
          <div class="opinionlab-popup-content -first">
            <div id="kroger_env"></div>
            <h2>Need assistance? Email us.</h2>
            <p>Send us your comments, questions and suggestions by email. We'll get right back to you.</p>
            <a class="button" href="/customercomments" target="_blank" data-qa="opinionlab email us link">Email Us</a>
          </div>
          <div class="opinionlab-popup-content -second">
            <div id="kroger_girl"></div>
            <h2>Need assistance? Call us.</h2>
            <p>Our Customer Service Ambassadors are ready to help you at <br /><span phone-link="1-866-221-4141"></span></p>
            <a class="button" target="_blank" data-qa="opinionlab call us link" href="/topic/contact-us">Call Us</a>
          </div>
          <div class="opinionlab-popup-content -third">
            <div id="kroger_bubble"></div>
            <h2>Leave website feedback</h2>
            <p>We want to hear from you, but please note that we cannot respond directly to your feedback.</p>
            <a class="button" href="javascript:void(0)" ng-click="showFeedback()">Leave Feedback</a>
          </div>
        </div>
      </div>
      <div class="side-modal-window-shade"></div>
    </div>
  </div>
</div>
  <div><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<script type="text/javascript">
  //<![CDATA[
  var axel = Math.random();
  var a = axel * 10000000000000;
  var url = 'https://1817628.fls.doubleclick.net' + '/activityi;src=1817628;type=' + 'alldi391' +';cat=' + 'kroge703' +';u1=' +'FredMeyer'+';ord=1;num=' + a + '?';
  var iframe = document.createElement("iframe");
  iframe.src = url;
  iframe.width = 1;
  iframe.height = 1;
  iframe.style.display = 'none';
  iframe.frameborder = 0;
  var reference = document.getElementsByTagName('script')[0];
  reference.parentNode.insertBefore(iframe, reference);
  //]]>

</script>

<noscript>
  <iframe width="1" height="1" frameborder="0" style="display:none" src="https://1817628.fls.doubleclick.net/activityi;src=1817628;type=alldi391;cat=kroge703;u1=[Division];ord=1;num=1?"></iframe>
</noscript></div>
  <div>
    <div class="flash-message-gadget">
  <script>/*<![CDATA[*/
requireQ(["everything"], function() {
  common.register('melange.gadgets.flashMessage', function () {
    return function ($scope, Content, Beacon) {
      var flashMessageTimeStamp;

      var initialize = function () {
        var slot_content = window.localEnvironment.flash.slotContent;
        Content.queryBySlotContent(slot_content, function (data) {
          if (!_.isEmpty(data)) {
            $scope.flashMessages = _.sortBy(data, function (flashMessage) {
              return flashMessage.order ? 1 / flashMessage.order.all : 0;
            });
            flashMessageTimeStamp = data[0].lastUpdatedOn;
          }
        });
      };

      $scope.shouldShowMessage = function () {
        return $scope.flashMessages && (!$.cookie("closedFlashMessageTimeStamp") ||
                                        ($.cookie("closedFlashMessageTimeStamp") !=
                                         flashMessageTimeStamp));
      };

      $scope.close = function () {
        Beacon.closeFlashMessage();
        $.cookie("closedFlashMessageTimeStamp", flashMessageTimeStamp);
      };

      initialize();
    }
  });

  melange.controller("flashMessageController",
      ['$scope', 'content.Service', 'beacon.Service', melange.gadgets.flashMessage()]);
});
/*]]>*/</script>
  <div ng-controller="flashMessageController">
    <div ng-show="shouldShowMessage()" class="flashMsgContainer" data-qa="lol">
      <ul>
        <li class="flashMsg" id="flashMessage{{$index}}" ng-repeat="flashMessage in flashMessages">
          <span class="leftDescriptor" ng-show="flashMessage.title">{{flashMessage.title}}:</span><span class="leftDescriptorDetails" ng-bind-html="flashMessage.body | markdown | trusted"></span>
        </li>
      </ul>
      <a class="flashCloseButton" ng-click="close()" data-qa="bahaha">X</a>
    </div>
  </div>
</div>
  </div>
  <div><div id="browserWarnMsg" class="-hidden">
  <p>In order to use this site, please make sure that your cookies are enabled, then click <a href="javascript:history.go(0)">here</a> to refresh the page.</p>
</div>

<script type="text/javascript">

  requireQ(["everything"], function() {
    $(function(){
      var responsiveEnabled = $('.row-fluid').length > 0;

      $.smartbanner({
        title:'FredMeyer',
        author:'FredMeyer',
        price:'FREE',
        appStoreLanguage: 'us',
        inAppStore: 'On the App Store',
        inGooglePlay: 'In Google Play',
        icon: '/static/ge45b4a5/image/appicon/fredmeyer.png',
        iconGloss: null,
        button: 'View',
        scale: responsiveEnabled ? 1 : "auto",
        speedIn: 300,
        speedOut: 400,
        daysHidden: 15,
        daysReminder: 15,
        force: null  });

      var  ce = navigator.cookieEnabled;
      if (typeof navigator.cookieEnabled === "undefined") {
        if(!ce){
          document.cookie = "any";
          ce = (document.cookie.indexOf("any") !== -1);
          document.cookie = ""
        }
      }

      if(!ce )
        $( "#browserWarnMsg" ).removeClass("-hidden");

      if(!responsiveEnabled){
        $("#smartbanner").css("width", "1020px");
      }
    });
  });

</script>



</div>
  <div id="grid-wrap" class="row-fluid">
    <div class="main">
      <fadeout-flash-message messages="fadeoutFlashMessages"></fadeout-flash-message>
      <header><script>/*<![CDATA[*/

requireQ(["everything"], function() {
  melange.controller('melange.app.responsiveNavigationController', [
    '$scope', '$timeout', '$rootScope', 'beacon.Service', "EnvLookup",
    melange.app.responsiveNavigationController = function ($scope, $timeout, $rootScope, Beacon, EnvLookup) {
      $scope.hideResponsiveNav = true;
      $scope.showResponsiveNav = false;
      $scope.bannerIsAuthenticated = EnvLookup.bannerIsAuthenticated;

      var toggleResponsiveNavOff = function () {
        $rootScope.$broadcast('showResponsiveNav', false);
        $scope.showResponsiveNav = false;
        $timeout(function () {
          $scope.hideResponsiveNav = true;
        }, 500);
      };

      $scope.$on("forceCloseResponsiveNav", toggleResponsiveNavOff);

      $scope.toggleResponsiveNav = function () {
        if (!$scope.showResponsiveNav) {
          Beacon.registerMobileMenuExpansion();
          $scope.hideResponsiveNav = false;
          $timeout(function () {
            $rootScope.$broadcast('showResponsiveNav', true);
            $scope.showResponsiveNav = true;
          }, 0);
        } else {
          toggleResponsiveNavOff();
        }
      };

    }
  ]);
});
/*]]>*/
</script>
<script>
  window.localEnvironment.signIn = {
    rememberMeEmail: null,
    rememberMeOption: null
  };
  window.localEnvironment.siteLogo = {
    slotContent: ['536be31184aee6e426bef6f4'],
    bannerDisplayName: 'Fred Meyer'
  };
  window.localEnvironment.topNavigation = {
    slotContent: ['534e0bf7abbf1957860e2405']
  };
</script>

<div ng-controller="melange.app.responsiveNavigationController" class="scoped-to-banner">
  <div class="mobile-header">
    <a class="mobile-header-menu-button" data-qa="mobile header menu button" ng-class="{&#39;active&#39;: showResponsiveNav}" ng-click="toggleResponsiveNav()"></a>
    <div class="mobile-menu-close-overlay" ng-show="showResponsiveNav" ng-click="toggleResponsiveNav()"></div>
    <a href="/" ng-click="track()" class="mobile-header-brand">Fred Meyer</a>
  </div>

  <div id="aboveNavigation">
    <script>/*<![CDATA[*/
requireQ(["everything"], function() {
  melange.controller("headerController", [
    '$rootScope', '$scope', 'storeFunctions.Service', 'beacon.Service', '$window', 'EnvLookup', 'waitTime.Service', 'triggerChangeStoreGadgetService',
    melange.gadgets.navigationGadget =
    function ($rootScope, $scope, storeFunctions, Beacon, $window, EnvLookup, WaitTimeService, triggerChangeStoreGadgetService) {
      $scope.preferredStoreId = '';

      $scope.isLittleClinic = EnvLookup.bannerName == 'TheLittleClinic';
      $scope.showStoreDrawer = false;
      $scope.storeLocatorText = EnvLookup.storeLocatorOptions.text;

      var updateWaitTime = function() {
        if($scope.isLittleClinic) {
          var details = storeFunctions.getPreferredStoreDetails();
          if (details) {
            WaitTimeService.getWaitTime({clinicId: details.recordId}, function (data) {
              $scope.waitTime = data.description;
            });
          }
        }
      };

      updateWaitTime();

      $scope.isPreferredStoreSelected = function () {
        return $scope.preferredStoreId != '';
      };

      $scope.showWaitTimeIndicator = function () {
        return $scope.isLittleClinic && $scope.isPreferredStoreSelected();
      };

      $scope.openChangeStoreDrawer = function () {
        Beacon.registerChangeStoreLinkClick('change');
        triggerChangeStoreGadgetService.trigger();
      };

      $scope.toggleStoreDrawer = function () {
        $rootScope.$broadcast('closeStoreReminder');
        $rootScope.$broadcast('headerDrawerWasToggled', 'storeDrawer');
        $scope.showStoreDrawer = !$scope.showStoreDrawer;
      };

      $scope.$on('headerDrawerWasToggled', function (e, drawerName) {
        if (drawerName != 'storeDrawer') {
          $scope.showStoreDrawer = false;
        }
      });

      $scope.$on('updateWaitTime', function(e) {
        updateWaitTime();
      });

      $scope.getPreferredStoreDetails = function () {
        var details = storeFunctions.getPreferredStoreDetails();
        if (details) {
          $scope.preferredStoreId = details.recordId;
          return details.address.prettyString;
        }
        return "No Store Selected";
      };

      $scope.trackPreferredStoreClick = function () {
        Beacon.registerStoreClick('my store');
        $window.location.href = '/storeHours?store=' + $scope.preferredStoreId;
      };

      $scope.trackFindStoreLink = function () {
        Beacon.registerStoreClick('find a store');
        $window.location.href = '/storeLocator?hash=findStoreLink';
      };
    }
  ]);
});
/*]]>*/
</script>
    <div id="siteLogoContainer" class="slot">
  <script>/*<![CDATA[*/
requireQ(["everything"], function() {
  common.register('melange.gadgets.siteLogo',
      melange.gadgets.siteLogo = function ($scope, $window, Content, Beacon) {
        var slotContent = $window.localEnvironment.siteLogo.slotContent || [];
        $scope.bannerDisplayName = $window.localEnvironment.siteLogo.bannerDisplayName;

        Content.queryBySlotContent(slotContent, function (data) {
          $scope.siteLogo = data.length > 0 ? data[0] : null;
          if ($scope.siteLogo && $scope.siteLogo.image) {
            $scope.siteLogoPath = "/asset/" + $scope.siteLogo.image + "?data=1";
          }
        });

        $scope.trackSiteLogo = function () {
          Beacon.registerSiteLogoClick();
        };
      });
  melange.controller('siteLogoGadgetController',
      ['$scope', '$window', 'content.Service', 'beacon.Service' , melange.gadgets.siteLogo]);
});
/*]]>*/
</script>
  <div ng-controller="siteLogoGadgetController">
    <div id="logo" data-qa="siteLogo">
      <a href="/" ng-click="trackSiteLogo()">
        <img ng-show="siteLogo" ng-src="{{siteLogoPath}}" title="{{bannerDisplayName}}" />
      </a>
    </div>
  </div>
</div>
    <div class="headerContainer" ng-controller="headerController">
    <div id="preferredStore" ng-class="{&#39;-little-clinic&#39;: isLittleClinic}">
      <a href="javascript:void(0);" ng-click="toggleStoreDrawer()" ng-class="{active: showStoreDrawer}" class="store-drawer-toggle"><span class="drawer-toggle-hidden-label">Preferred Store Information</span></a>
      <change-store-reminder store-text="storeLocatorText"></change-store-reminder>
      <div class="preferred-store-drawer" ng-class="{&#39;drawer-visible&#39;: showStoreDrawer}">
        <div class="preferred-store-drawer-wrapper" data-qa="preferred store section">
          <h4 data-qa="preferred store heading">My {{storeLocatorText}}: </h4>
          <a data-qa="preferred store hours link" class="storeHoursLink" ng-hide="preferredStoreId == &#39;&#39;" ng-click="trackPreferredStoreClick()" href="" ng-bind-html="getPreferredStoreDetails() | trusted"></a>
          <p ng-show="preferredStoreId == &#39;&#39;" class="no-preferred-store-message">No {{storeLocatorText}} Selected</p>
          <p id="waitTimeDivider" ng-class="{&#39;-store-selected&#39; : preferredStoreId != &#39;&#39;}" class="divider -wait-time">|</p>
          <div ng-class="{&#39;-no-selected-store&#39; : preferredStoreId == &#39;&#39;}" class="preferred-store-drawer-store-links">
            <a class="change-store-link" data-qa="navigation change store link" ng-click="openChangeStoreDrawer()" href=""><span>Change {{storeLocatorText}}</span></a>
            <p class="divider">|</p>
            <a class="find-store-link" ng-click="trackFindStoreLink()" href=""><span> Find a {{storeLocatorText}} </span></a>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div id="previewContextContainer" class="slot">
</div>
    </div>
    <div id="searchContainer" class="slot">
  <script>/*<![CDATA[*/
requireQ(["everything"], function() {
  common.register('melange.gadgets.fmSearch',
      melange.gadgets.fmSearch = function ($rootScope, $scope, $window, EnvLookup, WindowSize) {
        $scope.query = '';
        $scope.searchModes = ["In Store", "Everything Else"];
        $scope.currentMode = "In Store";
        $scope.fredMeyerGrBaseDomain = EnvLookup.fredMeyerGrBaseDomain;
        $scope.fredMeyerCatalogId = EnvLookup.fredMeyerCatalogId;
        $scope.fredMeyerStoreId = EnvLookup.fredMeyerStoreId;
        $scope.windowTooSmallForSearch = false;

        $scope.toggleSearchDrawer = function () {
          $rootScope.$broadcast('closeStoreReminder');
          $rootScope.$broadcast('headerDrawerWasToggled', 'searchDrawer');
          $scope.showSearchDrawer = !$scope.showSearchDrawer;
        };

        $scope.$on('headerDrawerWasToggled', function (e, drawerName) {
          if (drawerName != 'searchDrawer') {
            $scope.showSearchDrawer = false;
          }
        });

        $scope.closeReminder = function () {
          $rootScope.$broadcast('closeStoreReminder');
        };

        function customSizeMinimizePinnedList() {
         if(WindowSize.windowWidthIsWithin(0, 420)){
           $scope.windowTooSmallForSearch = true;
         } else {
           $scope.windowTooSmallForSearch = false;
         }
        }
        WindowSize.registerResizeCallback(customSizeMinimizePinnedList);

        $scope.$on('queryChanged', function (e, query) {
          $scope.query = query;
        });

        $scope.performSearch = function (url) {
          if ($scope.query === '') {
            $window.location.reload(true);
            return;
          }
          $window.location.href = url;
        };

        $scope.giftRegistrySearchUrl = function (query) {
          return "https://".concat($scope.fredMeyerGrBaseDomain)
              .concat("/webapp/wcs/stores/servlet/SearchDisplay?s=Catalog")
              .concat("&storeId=").concat($scope.fredMeyerStoreId)
              .concat("&catalogId=").concat($scope.fredMeyerCatalogId)
              .concat("&sType=SimpleSearch")
              .concat("&showResultsPage=true&pageView=image")
              .concat("&langId=-1")
              .concat("&searchTerm=").concat(encodeURIComponent(query));
        };

        $scope.findFm = function () {
          if ($scope.currentMode === "In Store") {
            $scope.performSearch($scope.giftRegistrySearchUrl($scope.query));
          } else {
            $scope.find();
          }
        };

        $scope.find = function () {
          if ($scope.query === '') {
            $window.location.reload(true);
            return;
          }
          $window.location.href = '/searching?query=' + encodeURIComponent($scope.query);
        };

        $scope.showPinnedList = function(){
          return EnvLookup.isPinnedShoppingListEnabled && WindowSize.respondSmall();
        };

      });
  melange.controller('melange.gadgets.fmSearchGadgetController',
      ['$rootScope', '$scope', '$window', 'EnvLookup', 'windowSize', melange.gadgets.fmSearch]);
});
/*]]>*/
</script>
  <div>
    <div ng-controller="melange.gadgets.fmSearchGadgetController" class="search-container">
      <form search-and-account-name-layout="" id="search" class="fm-search flex-item" name="search" ng-submit="findFm()" data-qa="search gadget mobile drawer">
          <select ng-model="currentMode" ng-options="mode for mode in searchModes" class="fm-search-mode-select"></select>
          <div class="search-wrapper -fm">
            <auto-complete-search ng-controller="autoCompleteSearchController"></auto-complete-search>
            <button type="submit" data-qa="search gadget submit" ng-style="{ &#39;background-color&#39;: query ? &#39;#cccccc&#39; : &#39;clear&#39; }">Search</button>
          </div>
      </form>
      <div pinned-list="" ng-if="showPinnedList()" ng-class="{ &#39;-minimized&#39;: searchFocus || windowTooSmallForSearch }"></div>
    </div>
  </div>
</div>

    <div class="authContainer">
      <div id="signInContainer" ng-show="bannerIsAuthenticated" class="slot">
  <script>/*<![CDATA[*/
requireQ(["everything"], function () {
  common.register('melange.gadgets.signIn', function () {
    return function ($rootScope, $scope, $window, $http, StoreFunctions, PromotionProgramService, Beacon, RedirectService, UrlUtilitiesService, EnvLookup, customerProfileService, $timeout, windowSize) {
      var rememberMeEmail = window.localEnvironment.signIn.rememberMeEmail;
      var rememberMeOption = window.localEnvironment.signIn.rememberMeOption;
      $scope.responsiveEnabled = windowSize.responsiveEnabled();
      var homeShopBaseUrl = EnvLookup.homeShopBaseUrl;
      var isHomeShopPickStoreServiceIntegrationEnabled = EnvLookup.homeShopPickStoreServiceIntigrationEnabled;
      var signInPrompts = {
        mysavings: 'To view My Savings Center with all your personalized offers, please sign in. Don\'t have a ' +
             EnvLookup.bannerSiteDomain +
             ' account? Register below for access to My Savings Center and more.',
        myRecipes: 'Please log in to view My Recipes.',
        favorite: 'Please log in to save recipes.',
        shoppingList: 'Please log in to add ingredients to your Shopping List.',
        defaultPrompt: 'Sign in to view your account information.',
        rating:'Please log in to rate recipes.'
      };

      var redirectBasedSignInPrompt = function () {
        return RedirectService.requestHasRedirectUrl() ? signInPrompts[ RedirectService.getParameterByName('redirectUrl').replace('/', '')] : "";
      };

      var urlBasedSignInPrompt = function() {
        var url = $window.location.pathname;
        var pathname= url.substring(url.lastIndexOf('/') + 1);
        return signInPrompts[pathname];
      };
      var actionBasedSignInPrompt = function(){
        var actionBasedPrompt = $scope.action && signInPrompts[$scope.action];
        return actionBasedPrompt ? actionBasedPrompt : "";
      };

      $scope.signInPrompt = function() {
        var urlOrDefaultPrompt = urlBasedSignInPrompt() ? urlBasedSignInPrompt() : signInPrompts.defaultPrompt;
        if (actionBasedSignInPrompt()) {
          return actionBasedSignInPrompt();
        } else {
          return redirectBasedSignInPrompt() ? redirectBasedSignInPrompt() : urlOrDefaultPrompt;
        }
      };

      var init = function () {
        var userEmail = "";
        if (RedirectService.cookieEnabled()) {
          userEmail = localStorage.getItem("userEmail");
          $timeout(function () {
            localStorage.removeItem("userEmail");
          }, 400);
        }

        $scope.account = { email: (_.isNull(userEmail) ? rememberMeEmail :
          userEmail), password: "", rememberMe: rememberMeOption };

        var href = $window.location.href;
        $scope.isHomeShop = $window.location.href.indexOf(homeShopBaseUrl) > -1;
        $scope.redirectUrlContains = function(token){
          if(RedirectService.requestHasRedirectUrl()){
            return token.indexOf(RedirectService.getParameterByName('redirectUrl')) >= 0;
          }
          return false;
        }
        $scope.showSignIn =
          ( href.indexOf('/#login') >= 0 || href.indexOf('/#/login') >= 0 ) ? true : false;
        $scope.isLoginError = false;
        $scope.isServiceError = false;
        $scope.emailErrorText = false;
        $scope.passwordErrorText = false;
        $scope.isLocked = false;
        $scope.isValidProgram = true;
        var queryParams = UrlUtilitiesService.getQueryParams();
        $scope.programName = queryParams.program;
        $scope.isEmailPreferenceError = queryParams.errorCode === "emailPreferenceNotSet";

        var path = (!$scope.isHomeShop ? '/account/create' : homeShopBaseUrl + '/account/pickstore');
        if (RedirectService.requestHasRedirectUrl()) {
          path = path + '?' + RedirectService.getSearchString();
        }
        if (queryParams.program) {
          path = path + '?program=' + queryParams.program;
        }
        $scope.createAccountLink = path;

      };

      var hasErrors = function () {
        return  $scope.invalidEmailError || $scope.invalidPasswordError;
      };

      var validateEmail = function () {
        $scope.emailErrorText = undefined;
        if (_.isEmpty($scope.account.email)) {
          $scope.emailErrorText = 'Email is required';
          $scope.invalidEmailError = true;
          $scope.isLoginError = false;
        } else if (!$scope.isValidEmailPattern($scope.account.email)) {
          $scope.emailErrorText = 'Email format is incorrect';
          $scope.invalidEmailError = true;
          $scope.isLoginError = true;
        }
        return $scope.emailErrorText;
      };

      var validatePassword = function () {
        $scope.passwordErrorText = undefined;
        if (_.isEmpty($scope.account.password)) {
          $scope.passwordErrorText = 'Password is required';
          $scope.invalidPasswordError = true;
          $scope.isLoginError = false;
        }

        return $scope.passwordErrorText;
      };

      var isUserHomeShopCustomer = function (data) {
        if (isHomeShopPickStoreServiceIntegrationEnabled) {
          if (data.userProfile
            && data.userProfile.bannerSpecificDetails
            && data.userProfile.bannerSpecificDetails[0]
            ) {
            return !_.isEmpty(data.userProfile.bannerSpecificDetails[0].pickupStoreDivisionNumber ||
              !_.isEmpty(data.userProfile.bannerSpecificDetails[0].pickupStoreNumber))
          }
        }
        else {
          //if homeshop has set cookie, honor it...
          var homeShopCookieName = "isHomeShopCustomer";
          var updatedValue;
          if ($.cookie(homeShopCookieName) != null) {
            updatedValue = customerProfileService.updateHomeShopCustomer($.cookie(homeShopCookieName));
          } else { //default to false since no cookie found
            updatedValue = customerProfileService.updateHomeShopCustomer(false);
          }
          return updatedValue;
        }
      }

      var isUserEmailOptedIn = function (data) {
        if (data.userProfile
                && data.userProfile.bannerSpecificDetails
                && data.userProfile.bannerSpecificDetails[0]
            && data.userProfile.bannerSpecificDetails[0].userEmailPreferences
            ) {
          var userEmailPreferences = data.userProfile.bannerSpecificDetails[0].userEmailPreferences;
          for (var index in userEmailPreferences) {
            if (userEmailPreferences[index].selected) {
              return true;
            }
          }
        }
        return false;
      };

      var isUserHotOffersEligible = function (data) {
        if (data.userProfile
                && data.userProfile.bannerSpecificDetails
                && data.userProfile.bannerSpecificDetails[0]
            && data.userProfile.bannerSpecificDetails[0].userEmailPreferences
            ) {
          var userEmailPreferences = data.userProfile.bannerSpecificDetails[0].userEmailPreferences;
          var couponSpecialPromotionsEmailPreferenceId = EnvLookup.couponSpecialPromotionsEmailPreferenceId;

          for (var index in userEmailPreferences) {
            if (userEmailPreferences[index].selected == true
                    && _.has(userEmailPreferences[index], "preferenceType")
                    && userEmailPreferences[index].preferenceType.indexOf("extras") > -1
                && userEmailPreferences[index].id == couponSpecialPromotionsEmailPreferenceId) {
              return true;
            }
          }
        }
        return false;
      };

      $scope.cancel = function () {
        Beacon.registerSignInCanceled();
        if ($scope.showSignIn) {
          $scope.showSignIn = false;
          return;
        }
        if (RedirectService.requestHasCancelUrl()) {
          $window.location.href = "/weeklyAd";
          return;
        }
        if (RedirectService.requestHasRedirectUrl()) {
          // for coupon redirect
          RedirectService.performRedirect();
        }
        else {
          $window.location.href = "/";
        }
      }

      $scope.$on('headerDrawerWasToggled', function (e, drawerName) {
        if (drawerName != 'signinDrawer') {
          $scope.showSignIn = false;
        }
      });

      $scope.registerRegisterTabClicked = function () {
        Beacon.registerRegisterTabClicked();
      };

      $scope.toggleDrawer = function () {
        $rootScope.$broadcast('closeStoreReminder');
        $rootScope.$broadcast('headerDrawerWasToggled', 'signinDrawer');
        if ($scope.showSignIn) {
          $scope.showSignIn = false;
        } else {
          init();
          Beacon.registerSignInClick();
          $scope.showSignIn = true;
          $scope.$broadcast('focusSigninEmailInput', "(min-width: 768px)");
          $window.scrollTo(0,0);
        }
      };

      function closeDrawer() {
        $scope.showSignIn = false;
      }

      $scope.$on('toggleAccountDrawer', closeDrawer);
      $scope.$on('toggleSearchDrawer', closeDrawer);
      $scope.$on('toggleStoreDrawer', closeDrawer);

      $scope.$on('signInEvent', function (event, data) {
        if(data) {
         $scope.action = data.action;
        }
        $scope.showSignIn = true;
        $scope.$broadcast('focusSigninEmailInput');
        $window.scrollTo(0,0);
      });

      $scope.submitClass = function () {
        return !$scope.disableSignIn() ? "submit mobileButtonEnabled" :
            "submit mobileButtonDisabled";
      };

      $scope.disableSignIn = function () {
        return _.isEmpty($scope.account.email) || _.isEmpty($scope.account.password);
      };

      $scope.isValidEmailPattern = function (email) {
        var emailPattern = /^[_a-zA-Z0-9]+([\.-]?[a-zA-Z0-9_]+)*@[a-zA-Z0-9]+([\.-]?[a-zA-Z0-9]+)*\.[A-Za-z]{2,}/;
        return email.length <= 50 && emailPattern.test(email);
      };

      $scope.submitOnIE8 = function () {
        if (isIE() == 8) {
          $scope.submit();
        }

        function isIE() {
          var myNav = navigator.userAgent.toLowerCase();
          return (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : false;
        }
      };

      $scope.submit = function () {
        $('input[ng-model]').trigger('input');
        var href, signInLocation = '';
        href = $window.location.href;
        if ($scope.showSignIn) {
          signInLocation = 'signInModal'
        } else {
          signInLocation = ($scope.isHomeShop ? 'homeShopSignInPage' : 'signInPage');
        }
        var rememberMeFlag = $scope.account.rememberMe ? 'rememberMe_true' : 'rememberMe_false';
        Beacon.registerSignInAttempt(signInLocation, rememberMeFlag);
        $scope.invalidEmailError = false;
        $scope.invalidPasswordError = false;
        var emailError = validateEmail();
        var passwordError = validatePassword();
        if (!hasErrors()) {
          $http.post("/user/authenticate",
              {account: $scope.account, location: $window.location.hash}).success(function (data) {
                data.hasOwnProperty('store') ? StoreFunctions.makePreferredStore(data['store']) :
                    StoreFunctions.removePreferredStore();
                customerProfileService.updateRegisteredUser(true);
//                customerProfileService.updateHomeShopCustomer(isUserHomeShopCustomer(data));
                customerProfileService.updateEmailOptInUser(isUserEmailOptedIn(data));
                customerProfileService.updateEmailHotOffersUser(isUserHotOffersEligible(data));

                if (data.hasOwnProperty('loyaltyCard')) {
                  if (data['loyaltyCard'].cardNumberOrAltId.length > 0) {
                    customerProfileService.updateLoyalMember(true);
                  } else {
                    customerProfileService.updateLoyalMember(false);
                  }
                }

                if (RedirectService.requestHasRedirectUrl()) {
                  Beacon.registerSignInSuccess(signInLocation, rememberMeFlag,
                      RedirectService.requestHasRedirectToExternalUrl());
                }
                else {
                  Beacon.registerSignInSuccess(signInLocation, rememberMeFlag);
                }

                if ("true" == EnvLookup.isHeartBleedEnabled) {
                  var momentLastChange = moment(data['userProfile']['dateLastPasswordChange']);
                  var momentPromptDate = moment(EnvLookup.changePasswordPromptDate, 'YYYY-MMM-DD');

                  var loginAttempts =
                      (_.isUndefined($.cookie("loginattempts")) ||
                       _.isEmpty($.cookie("loginattempts"))) ?
                          0 : $.cookie("loginattempts");

                  if ((momentLastChange.isBefore(momentPromptDate) &&
                       parseInt(loginAttempts) < parseInt(EnvLookup.noOfAllowedAttempts))) {
                    $.cookie("loginattempts", ++loginAttempts, {path: '/', expires: 730});
                    if (RedirectService.requestHasRedirectUrl()) {
                      $window.location.href = '/changePassword?redirectUrl=' +
                                              encodeURIComponent(RedirectService.getParameterByName('redirectUrl'));
                    } else {
                      $window.location.href = '/changePassword';
                    }
                  } else {
                    if (RedirectService.requestHasRedirectUrl()) {
                      $timeout(function () { RedirectService.performRedirect(); }, 400);
                    }
                    else {
                      if ($scope.isHomeShop) {
                        $window.location.href = homeShopBaseUrl;
                        return;
                      }
                      $window.location.reload(true);
                    }
                  }
                } else {
                  if (RedirectService.requestHasRedirectUrl()) {
                    $timeout(function () { RedirectService.performRedirect(); }, 400);
                  }
                  else {
                    if ($scope.isHomeShop) {
                      $window.location.href = homeShopBaseUrl;
                      return;
                    }
                    $window.location.reload(true);
                  }
                }
              }).error(function (data) {
                $scope.isLocked = data["isLocked"];
                $scope.isValidationError = data["isValidationError"];
                $scope.isLoginError = !($scope.isLocked) || $scope.isValidationError;
                if (data["isServiceError"]) {
                  $scope.isServiceError = data["isServiceError"];
                  $scope.correlationId = data["correlationId"];
                  $scope.errorTypeCode = data["errorTypeCode"];
                  $scope.isLoginError = false;
                } else {
                  $scope.isServiceError = false;
                }
                var errorMsg = [];
                var messages = {
                  "Account has been locked": $scope.isLocked,
                  "Login credentials wrong": $scope.isLoginError,
                  "Sign In Service Error": $scope.isServiceError,
                  "Email Preferences problem": $scope.isEmailPreferenceError
                };
                _.each(_.keys(messages),
                    function (message) {
                      if (messages[message]) {
                        errorMsg.push(message);
                      }
                    });
                var trackingMessage = errorMsg.join("|");
                if ( $scope.isServiceError ) {
                  Beacon.registerSignInFailure(rememberMeFlag, signInLocation, trackingMessage,
                    $scope.errorTypeCode + ":" + $scope.correlationId);
                } else {
                  Beacon.registerSignInFailure(rememberMeFlag, signInLocation, trackingMessage);
                }
                $scope.account.password = "";
              });
        } else {
          $scope.account.password = "";
          var errorMsg;
          if (!_.isUndefined(emailError) && !_.isUndefined(passwordError)) {
            errorMsg = emailError + '_' + passwordError;
          } else if (!_.isUndefined(emailError) && _.isUndefined(passwordError)) {
            errorMsg = emailError;
          } else if (_.isUndefined(emailError) && !_.isUndefined(passwordError)) {
            errorMsg = passwordError;
          }
          Beacon.registerSignInFailure(rememberMeFlag, signInLocation, errorMsg);
        }
      };
      init();
    };
  });

  melange.controller("signInController", [
    '$rootScope', '$scope', '$window', '$http', 'storeFunctions.Service',
    'promotionalPrograms.Service', 'beacon.Service', 'redirect.Service',
    'urlUtilities.Service', 'EnvLookup' , 'customerProfile.Service',
    '$timeout', 'windowSize',
    melange.gadgets.signIn()
  ]);
});
/*]]>*/
</script>

  <div ng-controller="signInController" class="authenticationGadget">

    <a href="javascript:void(0)" id="signIn" class="account-drawer-toggle drawer-toggle-hidden-label" ng-click="toggleDrawer()" ng-class="{active: showSignIn}">Sign In</a>

    <div class="sign-in-drawer" ng-class="{&#39;drawer-visible&#39;: showSignIn}">
     <div class="sign-in-drawer-tabs">
        <span class="sign-in-drawer-tab -active">Sign In</span>
        <a class="sign-in-drawer-tab" ng-click="registerRegisterTabClicked()" ng-href="{{createAccountLink}}">Register</a>
     </div>
      <div class="sign-in-drawer-heading">
        <h1>Sign In</h1>
        <a href="" class="sign-in-drawer-close" ng-click="toggleDrawer()">
          <img src="/static/image/icon_close.png" width="21" height="21" />
        </a>
      </div>
      <div>

<form ng-submit="submit()" method="POST" ui-keypress="{13:&#39;submitOnIE8()&#39;}" class="signin-drawer-form cn-modal-content" name="signInForm" id="signInForm" autocomplete="off" novalidate="novalidate">
  <p><i>{{signInPrompt()}}</i></p>

  <div ng-show="isEmailPreferenceError" class="section-error" data-qa="signin-drawer-email-preference-error">
    <p>We're sorry, due to technical difficulties, your email preferences have not been set. Please sign in to your account and navigate to your Account Summary to reselect your email preferences.</p>
  </div>
  <div ng-show="isLoginError" class="section-error" data-qa="signin-drawer-login-error">
    <p>There was a problem with the information that you entered. <br />Your login attempt was not successful.
    </p>
  </div>
  <div ng-show="isServiceError" class="section-error" data-qa="signin-drawer-service-error">
    <p>We're sorry, an unexpected error occurred during your sign-in attempt. <br />Please try signing in again.
    </p>
  </div>
  <div ng-show="isLocked" class="section-error" data-qa="signin-drawer-locked-error">
    <p> This account has been locked due to a problem with the information you entered. Please wait 30 minutes
      for the account to be unlocked and try again. Or, contact<a href="/ContactUs"> Customer Service</a> for help with your account.</p>
  </div>

  <ul>
    <li class="signin-drawer-field-item">
      <label for="signin-drawer-email-address">Email Address:</label>
      <input type="email" id="signin-drawer-email-address" data-qa="signin-drawer-email-address" size="40" ng-model="account.email" set-focus="focusSigninEmailInput" ng-class="{&#39;-field-error&#39;:emailErrorText}" remove-default-ng-validations="true" />

      <div ng-show="emailErrorText" class="alert-error" data-qa="signin-drawer-email-error-text">
        <p>{{ emailErrorText }}</p>
      </div>
    </li>
    <li class="signin-drawer-field-item">
      <label for="signin-drawer-password">Password:</label>
      <input type="password" id="signin-drawer-password" data-qa="signin-drawer-password" size="40" ng-model="account.password" ng-class="{&#39;-field-error&#39;:passwordErrorText}" autocomplete="off" />
      <div ng-show="passwordErrorText" class="alert-error" data-qa="signin-drawer-password-error-text">
        <p>{{ passwordErrorText }}</p>
      </div>
    </li>
    <li class="field-item -checkbox -small-bottom-margin">
      <span class="field-item-input-wrapper"><input type="checkbox" id="signin-drawer-remember-me" name="rememberMe" size="40" ng-model="account.rememberMe" /></span>
      <label for="signin-drawer-remember-me" class="unbold">Remember Me</label>
    </li>
  </ul>
  <div class="sign-in-other-actions">
    <a href="/forgotPassword">Forgot your password?</a>
    <p class="sign-in-drawer-create-account-link">New to <span>Fred Meyer</span>? <a ng-href="{{createAccountLink}}"> Create an account</a></p>
  </div>
  <div class="signin-drawer-field-item-buttons">
    <input id="signin-drawer-submit" data-qa="signin-drawer-submit" type="submit" value="Sign In" />
    <input type="button" id="signin-drawer-cancel" ng-click="cancel()" value="Cancel" class="cancelButton" />
  </div>
</form>
</div>
    </div>
  </div>

</div>
      <div id="registrationContainer" ng-show="bannerIsAuthenticated" class="slot">

  <script type="text/javascript">
    requireQ(["everything"], function() {
      melange.controller('registration_identifier', [
        '$scope', '$window', 'beacon.Service', 'redirect.Service', 'EnvLookup',
        function ($scope, $window, Beacon, RedirectService, EnvLookup) {
          var pathName = window.location.href.split('/');
          var pageName = pathName[pathName.length - 1];
          var homeShopBaseUrl = EnvLookup.homeShopBaseUrl;
          var isHomeShop = $window.location.href.indexOf(homeShopBaseUrl) > -1;
          $scope.register = function () {
            var path = (!isHomeShop ? '/account/create' : homeShopBaseUrl + '/account/pickstore');
            Beacon.registerCreateAccountClick();
            $window.location.href = RedirectService.requestHasRedirectUrl() ?
                path + '?' + RedirectService.getSearchString() : path;
          }
        }
      ]);
    });
  </script>

  <div class="createAccountGadget" ng-controller="registration_identifier">
    <span id="createAccountLabel" class="register">No Account?</span>
    <a id="createAccount" href="javascript:void(0)" ng-click="register()" class="register">Register</a>
  </div>
</div>
      <div id="waitTimeContainer" ng-show="showWaitTimeIndicator()" class="wait-time-display">
        <div class="wait-time-header">
          Current Wait Time
        </div>
        <div class="wait-time-value">
          <div class="wait_time-text">{{waitTime}}</div>
        </div>
      </div>
    </div>

    <div id="preferredStoreBelow" ng-show="isLittleClinic">
      <h4 data-qa="preferred store heading">My {{storeLocatorText}}: </h4>
      <a data-qa="preferred store hours link" class="storeHoursLink" ng-hide="preferredStoreId == &#39;&#39;" ng-click="trackPreferredStoreClick()" href="" ng-bind-html="getPreferredStoreDetails() | trusted"></a>
      <span ng-show="preferredStoreId == &#39;&#39;">No {{storeLocatorText}} Selected</span>
      <p ng-show="waitTime" class="wait-time-label">
        <span class="wait-time-text">Current Wait Time: {{waitTime}}</span>
      </p>
    </div>

    </div>
  </div>

  <div class="navbarNavigation navbarNav">
    <a href="/" ng-click="track()" class="brand">Fred Meyer</a>
    <div id="topNavigation" role="navigation" ng-class="{&#39;-hidden-respond-small&#39; : hideResponsiveNav }" tabindex="0" class="slot topNavigation">
  <script>/*<![CDATA[*/
requireQ(["everything"], function () {

common.register('melange.gadgets.fmTopNavigationGadget', melange.gadgets.fmTopNavigationGadget = function () {
  return function ($scope, $rootScope, Content, $compile, EnvLookup, $window,
                   $http, HackNavigationMarkup, htmlEncodedStringModel, windowSize) {
    var FM_DIVISION_NUMBER = "701";
    var FM_DEFAULT_STORE_CODE = "00035";
    var navLoaded;

    $scope.showPinnedList = function(){
      return EnvLookup.isPinnedShoppingListEnabled && navLoaded && !windowSize.respondSmall();
    };

    var slot_content = $window.localEnvironment.topNavigation.slotContent;

    var wireUpNavLinks = function(templateHTML) {
      templateHTML.prepend($scope.createInStoreMenu($scope.store));

      HackNavigationMarkup.hackIt(templateHTML);

      $scope.templateHTML = templateHTML;
      $compile(templateHTML)($scope, function (clonedElement) {
        var element = $("#topNavigation").prepend(clonedElement);
        $rootScope.$broadcast("topNavigationLoaded");
      });
    };

    $scope.createInStoreMenu = function(store) {
      var inStoreMenu = $("<li><a href='/'>In Store</a></li>");
      if(store === undefined || store === null) {
        return inStoreMenu;
      }
      var secondLevelMenu = $("<ul></ul>");
      _.each(store.departmentCategory, function(category) {
        var secondLevelItem = $("<li></li>");
        var menuLink = $("<a></a>")
          .attr("href", category.url)
          .text(htmlEncodedStringModel(category.name).decode());
        var thirdLevelMenu = $("<ul></ul>");
        _.each(category.childCategory, function(childCategory) {
          var thirdLevelItem = $("<li></li>");
          var menuLink = $("<a></a>")
            .attr("href", childCategory.url)
            .text(htmlEncodedStringModel(childCategory.name).decode());
          thirdLevelItem.append(menuLink);
          thirdLevelMenu.append(thirdLevelItem);
        });
        secondLevelItem.append(menuLink);
        secondLevelItem.append(thirdLevelMenu);
        secondLevelMenu.append(secondLevelItem);
        inStoreMenu.append(secondLevelMenu);
      });
      return inStoreMenu;
    };

    $scope.shouldExpandInStore = function() {
      return $scope.store !== undefined;
    };

    var init = function () {
      if(_.isEmpty(slot_content)) return;
      Content.query({id: slot_content}, function (data) {
        var templateHTML = $(angular.element(data[0].body));

        var baseUrl = EnvLookup.fredMeyerInstoreMenuEndpoint || "";
        var storeCode = $.cookie("StoreCode") || FM_DEFAULT_STORE_CODE;

        var instoreMenuUrl = baseUrl
          .concat("/templates/catalog/")
          .concat(FM_DIVISION_NUMBER)
          .concat("/")
          .concat(storeCode);

        jQuery.ajax({
          url: instoreMenuUrl,
          dataType: "jsonp",
          timeout: 3000,
          success: function(data) {
             if( data !== null) $scope.store = data.store;
          },
          error: function() {
            console.log("In Store menu errored out.");
          },
          complete: function() {
            navLoaded = true;
            wireUpNavLinks(templateHTML);
          }
        });
      });
    };

    init();
  };
});
melange.controller('fmTopNavigationController', ['$scope', '$rootScope', 'content.Service','$compile',
  'EnvLookup', '$window', '$http', 'hackNavigationMarkup.Service', 'htmlEncodedStringModel', 'windowSize',
  melange.gadgets.fmTopNavigationGadget()]);
});
/*]]>*/
</script>
  <div ng-controller="fmTopNavigationController" id="topNavigation">
      <div pinned-list="" ng-if="showPinnedList()"></div>
  </div>
</div>
  </div>
</div></header>
      <div class="contentBox" id="contentBox">
        <section id="main">
    <script>/*<![CDATA[*/
requireQ(["everything"], function() {
  common.register('melange.gadgets.hero', function (slot_content) {
    return function ($scope, Content, Asset) {

      if (slot_content.length == 0) return;

      var heroCollection = slot_content[0];
      $scope.heroes = [];
      $scope.isMultiHeroContent = false;
      Content.query({id: _.map(heroCollection.ids, function (item) {
        return item.identifier;
      })}, function (data) {
        $scope.heroes = data || [];
        $scope.isMultiHeroContent = $scope.heroes.length > 1;
        $.each($scope.heroes, function (index, hero) {
          if (hero && hero.image) {
            Asset.get({id: hero.image}, function (metadata) {
              hero.imageMetadata = metadata;
              hero.learnMoreLink =
              (!_.isEmpty(hero.externalUrl) ? hero.externalUrl : '/topic/' + hero.slug);
            });
          }
        });
      });
    }
  });
});
/*]]>*/</script>
    <script>
      requireQ(["everything"], function() {
        melange.controller('main_identifier', [
          '$scope', 'content.Service', 'asset.Service',
              melange.gadgets.hero([{'ids':[{'weight':2.542,'banners':{'FredMeyer':{'divisions':{'701':{'weight':'0.04','endDate':'2015-02-21T23:59:59.999-05:00','startDate':'2015-02-15T00:00:00.000-05:00'}},'allDivisionSelected':true,'weight':'0.04'}},'rules':{'and':[{'rule':'banners?.containsKey(bannerName)','weight':0.001},{'or':[{'and':[{'rule':'banners[bannerName]?.divisions?.containsKey(divisionNumber)','weight':'(banners[bannerName]?.divisions[divisionNumber]?.weight?:0.001).toDouble()'},{'rule':'((banners[bannerName]?.divisions[divisionNumber]?.startDate?:startDate)..(banners[bannerName]?.divisions[divisionNumber]?.endDate?:endDate)).containsWithinBounds(today)','weight':0.001}]},{'and':[{'rule':'banners[bannerName]?.allDivisionSelected','weight':'(banners[bannerName]?.weight?:0.001).toDouble()'},{'rule':'banners[bannerName].divisions.every{key,value-> ((value?.startDate?:startDate)..(value?.endDate?:endDate)).containsWithinBounds(today) }','weight':0.001}]}]},{'rule':'allowedLoginState == \'all\' || allowedLoginState == loggedIn.toString()','weight':0.5},{'rule':'allowedLoginStateShoppers == \'all\' || allowedLoginStateShoppers == hasLoyaltyCard.toString()','weight':0.5},{'rule':'userPreferredStore == \'all\' || userPreferredStore == hasPreferredStore.toString()','weight':0.5},{'rule':'registeredUser == \'all\' || registeredUser == isRegistered.toString()','weight':0.5},{'rule':'emailOptInUser == \'all\' || emailOptInUser == isEmailOptInUser.toString()','weight':0.5}]},'identifier':'54de676984aec5bc329dfa8a','allowedLoginState':'all','allowedLoginStateShoppers':'all','userPreferredStore':'all','registeredUser':'all','emailOptInUser':'all'},{'weight':2.532,'banners':{'FredMeyer':{'divisions':{'701':{'weight':'0.03','endDate':'2015-02-21T23:59:59.999-05:00','startDate':'2015-02-15T00:00:00.000-05:00'}},'allDivisionSelected':true,'weight':'0.03'}},'rules':{'and':[{'rule':'banners?.containsKey(bannerName)','weight':0.001},{'or':[{'and':[{'rule':'banners[bannerName]?.divisions?.containsKey(divisionNumber)','weight':'(banners[bannerName]?.divisions[divisionNumber]?.weight?:0.001).toDouble()'},{'rule':'((banners[bannerName]?.divisions[divisionNumber]?.startDate?:startDate)..(banners[bannerName]?.divisions[divisionNumber]?.endDate?:endDate)).containsWithinBounds(today)','weight':0.001}]},{'and':[{'rule':'banners[bannerName]?.allDivisionSelected','weight':'(banners[bannerName]?.weight?:0.001).toDouble()'},{'rule':'banners[bannerName].divisions.every{key,value-> ((value?.startDate?:startDate)..(value?.endDate?:endDate)).containsWithinBounds(today) }','weight':0.001}]}]},{'rule':'allowedLoginState == \'all\' || allowedLoginState == loggedIn.toString()','weight':0.5},{'rule':'allowedLoginStateShoppers == \'all\' || allowedLoginStateShoppers == hasLoyaltyCard.toString()','weight':0.5},{'rule':'userPreferredStore == \'all\' || userPreferredStore == hasPreferredStore.toString()','weight':0.5},{'rule':'registeredUser == \'all\' || registeredUser == isRegistered.toString()','weight':0.5},{'rule':'emailOptInUser == \'all\' || emailOptInUser == isEmailOptInUser.toString()','weight':0.5}]},'identifier':'54de67ec84aec5bc329dfa8b','allowedLoginState':'all','allowedLoginStateShoppers':'all','userPreferredStore':'all','registeredUser':'all','emailOptInUser':'all'},{'weight':2.5220000000000002,'banners':{'FredMeyer':{'divisions':{'701':{'weight':'0.02','endDate':'2015-02-21T23:59:59.999-05:00','startDate':'2015-02-15T00:00:00.000-05:00'}},'allDivisionSelected':true,'weight':'0.02'}},'rules':{'and':[{'rule':'banners?.containsKey(bannerName)','weight':0.001},{'or':[{'and':[{'rule':'banners[bannerName]?.divisions?.containsKey(divisionNumber)','weight':'(banners[bannerName]?.divisions[divisionNumber]?.weight?:0.001).toDouble()'},{'rule':'((banners[bannerName]?.divisions[divisionNumber]?.startDate?:startDate)..(banners[bannerName]?.divisions[divisionNumber]?.endDate?:endDate)).containsWithinBounds(today)','weight':0.001}]},{'and':[{'rule':'banners[bannerName]?.allDivisionSelected','weight':'(banners[bannerName]?.weight?:0.001).toDouble()'},{'rule':'banners[bannerName].divisions.every{key,value-> ((value?.startDate?:startDate)..(value?.endDate?:endDate)).containsWithinBounds(today) }','weight':0.001}]}]},{'rule':'allowedLoginState == \'all\' || allowedLoginState == loggedIn.toString()','weight':0.5},{'rule':'allowedLoginStateShoppers == \'all\' || allowedLoginStateShoppers == hasLoyaltyCard.toString()','weight':0.5},{'rule':'userPreferredStore == \'all\' || userPreferredStore == hasPreferredStore.toString()','weight':0.5},{'rule':'registeredUser == \'all\' || registeredUser == isRegistered.toString()','weight':0.5},{'rule':'emailOptInUser == \'all\' || emailOptInUser == isEmailOptInUser.toString()','weight':0.5}]},'identifier':'54de685a84aec5bc329dfa8c','allowedLoginState':'all','allowedLoginStateShoppers':'all','userPreferredStore':'all','registeredUser':'all','emailOptInUser':'all'}]}] || [])
        ])
        ;
      });
    </script>
    <div ng-controller="main_identifier">
      <div id="heroGadget">
        <herocarousel heroes="heroes" tracking-name="hero"></herocarousel>
      </div>
    </div>
  </section>
        <div>
  <script>/*<![CDATA[*/

requireQ(["everything"], function() {
  common.register('melange.gadgets.servicesOffered', function () {

    return function ($scope, Content, Asset, $window, windowSize, Beacon) {
      $scope.backgroundColor = window.localEnvironment.servicesOffered.attributes;
      var slotContent = window.localEnvironment.servicesOffered.slotContent;
      $scope.services = [];
      $scope.index = 0;

      function getServices() {
        if (_.isEmpty(slotContent)) return;
        Content.query({id: slotContent}, function (data) {
          $scope.services = _.sortBy(data, function (service) {
            return service.order ? 1 / service.order.all : 0;
          });
          $.each($scope.services, function (index, item) {
            if (item.asset) {
              Asset.get({id: item.asset}, function (metadata) {
                item.imageMetadata = metadata;
              });
            }
          });
        });
      }

      $scope.trackServicesOffered = function (targetLink, elementName, index) {
        Beacon.registerServicesOfferedClick(targetLink, elementName, index);
      };

      $scope.currentServices = function () {
        var result = [];

        for (var i = 0; i < $scope.itemsPerPage && i < $scope.services.length; i++) {
          result.push($scope.services[(i + $scope.index) % $scope.services.length]);
        }
        return result;
      };

      $scope.next = function () {
        $scope.index += $scope.itemsPerPage;
        $scope.index = $scope.index % $scope.services.length;
      };

      $scope.previous = function () {
        $scope.index -= $scope.itemsPerPage;
        if ($scope.index < 0)
          $scope.index = $scope.index + $scope.services.length;
      };

      $scope.resize = function () {
        $scope.index = 0;
        $scope.itemsPerPage = windowSize.rotatorColumnsForPage();
      };

      var init = function () {
        if (slotContent.length == 0) return;
        getServices();
        $scope.itemsPerPage = windowSize.rotatorColumnsForPage();
        windowSize.registerResizeCallback($scope.resize);
      };

      init();
    };
  });

  melange.controller("servicesOfferedController", [
    '$scope', 'content.Service', 'asset.Service', '$window', 'windowSize', 'beacon.Service',
    melange.gadgets.servicesOffered()
  ]);
});
/*]]>*/
</script>
  <div ng-controller="servicesOfferedController" ng-style="{&#39;background-color&#39; : backgroundColor}" class="servicesOffered" ng-show="services">
      <div class="carousel slide feature-carousel">
    <a class="prev-button" href="" ng-click="previous()" ng-show="services.length &gt; itemsPerPage"></a>
    <ul class="slidingRotator services" services-offered-swipe="" ng-swipe-left="swipeLeft()" ng-swipe-right="swipeRight()" next="next()" previous="previous()">
      <li class="services-offered-item" ng-repeat="service in currentServices()">
        <div class="services-offered-inner">
          <a class="services-offered-image" href="" ng-click="trackServicesOffered(&#39;{{service.target}}&#39;, &#39;{{service.title}}&#39;, &#39;{{$index+1}}&#39;)">
            <img ng-src="{{ service.asset | assetSource }}" alt="{{service.imageMetadata.name}}" />
          </a>
          <div class="serviceOfferedText">
            <a href="" ng-click="trackServicesOffered(&#39;{{service.target}}&#39;, &#39;{{service.title}}&#39;, &#39;{{$index+1}}&#39;)" class="serviceOfferedTitle">{{service.title|exactTruncate:15:false }}</a>
            <a href="" ng-click="trackServicesOffered(&#39;{{service.target}}&#39;, &#39;{{service.title}}&#39;, &#39;{{$index+1}}&#39;)" class="serviceOfferedContent">{{service.body|exactTruncate:40:true }}</a>
          </div>
        </div>
      </li>
    </ul>
    <a class="next-button" swipe="swipe" href="" ng-click="next()" ng-show="services.length &gt; itemsPerPage"></a>
  </div>
  </div>
</div>

        <div>
            <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<script>/*<![CDATA[*/
requireQ(["everything"], function () {
melange.controller('dealsGadget', ['$scope', '$rootScope', '$window', 'EnvLookup', 'beacon.Service', melange.gadgets.dealsGadget = function ($scope, $rootScope, $window, EnvLookup, Beacon) {
  $scope.disableWeeklyAds = function(){
    return EnvLookup.bannerName === "FredMeyer" && !EnvLookup.isWeeklyAdsEnabledForFM;
  };

  $scope.weeklyAdsInitialized = false;
  $scope.couponsInitialized = false;
  $scope.couponPromotionsInitialized = false;
  var WEEKLY_ADS = "weeklyAds";
  var COUPONS = "coupons";
  var COUPON_PROMOTIONS = "couponPromotions";
  $scope.selectedTab = $scope.disableWeeklyAds() ? COUPONS: WEEKLY_ADS;
  $scope.fireTrackingEventForCouponsTab = !$scope.disableWeeklyAds();

  var init = function () {
    $scope.isCouponPromotionConfigured = EnvLookup.couponPromotion;
    $scope.couponPromotionTabName = EnvLookup.couponPromotionTabName;
    $scope.couponPromotionViewAllURL = EnvLookup.couponPromotionViewAllURL;
    $scope.isCouponPromotionsEnabled = EnvLookup.isCouponPromotionsEnabled;
  };

  $scope.getTabNum = function(){
    return ($scope.isCouponPromotionConfigured && $scope.isCouponPromotionsEnabled) ? "-three-tabs-full-width-on-small" : "-two-tabs-full-width-on-small";
  };

  $scope.switchToCoupons = function() {
    $scope.selectedTab = COUPONS;
    $rootScope.$broadcast('deals.switchedTo', 'coupons', true);
  };

  $scope.switchToCouponPromotions = function() {
    $scope.selectedTab = COUPON_PROMOTIONS;
    $rootScope.$broadcast('deals.switchedTo', 'couponPromotions');
  };

  $scope.switchToWeeklyAds = function() {
    $scope.selectedTab = WEEKLY_ADS;
    $rootScope.$broadcast( 'deals.switchedTo', 'weeklyAd');
  };

  $scope.showCoupons = function() {
    return $scope.couponsInitialized && $scope.selectedTab == COUPONS ;
  };

  $scope.showCouponsError = function() {
    return !$scope.couponsInitialized && $scope.selectedTab == COUPONS;
  };

  $scope.showCouponPromotions = function() {
    return $scope.couponPromotionsInitialized && $scope.selectedTab == COUPON_PROMOTIONS ;
  };

  $scope.showWeeklyAds = function() {
    return $scope.weeklyAdsInitialized && $scope.selectedTab == WEEKLY_ADS;
  };

  $scope.showWeeklyAdsError = function() {
    return !$scope.weeklyAdsInitialized && $scope.selectedTab == WEEKLY_ADS;
  };

  $scope.showAllWeeklyAds = function() {
    Beacon.registerShowAllClick('weekly ad widget', '/weeklyad');
  };

  $scope.showAllCoupons = function() {
    Beacon.registerShowAllClick('coupon widget', '/coupons');
  };

  $scope.showAllCouponPromotions = function() {
    Beacon.registerShowAllClick('coupon promotion', $scope.couponPromotionViewAllURL);
  };

  $scope.focusOnCoupons = function() {
    return $window.location.search == "?=Coupons" || EnvLookup.bannerName === "FredMeyer";
  };

  $scope.$on('deals.weeklyAdsInitialized', function () {
    $scope.weeklyAdsInitialized = true;
  });

  $scope.$on('deals.couponsInitialized', function () {
    $scope.couponsInitialized = true;
    if($scope.focusOnCoupons()){
      $scope.selectedTab = COUPONS;
      $rootScope.$broadcast( 'deals.switchedTo', 'coupons', $scope.fireTrackingEventForCouponsTab);
    }
  });

  $scope.$on('deals.couponPromotionsInitialized', function () {
    $scope.couponPromotionsInitialized = true;
    if($window.location.search == "?=CouponPromotions"){
      $scope.selectedTab = COUPON_PROMOTIONS;
      $rootScope.$broadcast( 'deals.switchedTo', 'couponPromotions');
    }
  });

  init();
}]);
});
/*]]>*/
</script>

<div class="deals-container" ng-controller="dealsGadget">
  <ul id="deals" class="deals-tabs" ng-class="getTabNum()">
    <li id="weeklyAds" class="deals-tab" ng-hide="disableWeeklyAds()" ng-class="{active: showWeeklyAds() || showWeeklyAdsError()}" ng-click="switchToWeeklyAds()">
      <a href="javascript:void(0);">Weekly Ad</a>
    </li>
    <li id="coupons" class="deals-tab" ng-class="{active: showCoupons() || showCouponsError()}" ng-click="switchToCoupons()">
      <a href="javascript:void(0);">Coupons</a>
    </li>
    <li id="couponPromotions" class="deals-tab" ng-class="{active: showCouponPromotions()}" ng-show="isCouponPromotionConfigured &amp;&amp; isCouponPromotionsEnabled" ng-click="switchToCouponPromotions()">
      <a href="javascript:void(0);">{{couponPromotionTabName}}</a>
    </li>
    <li class="view-all-link">
      <a ng-href="#" ng-click="showAllWeeklyAds()" class="dealsLink" ng-show="showWeeklyAds() || showWeeklyAdsError()" data-qa="view all ads">View All Weekly Ads</a>
      <a ng-href="#" ng-click="showAllCoupons()" class="dealsLink" ng-show="showCoupons() || showCouponsError()" data-qa="view all coupons">View All Coupons</a>
      <a ng-href="#" ng-click="showAllCouponPromotions()" class="dealsLink" ng-show="showCouponPromotions()" data-qa="view all promotions">View All</a>
    </li>
  </ul>

  <section id="weeklyAdsSection" ng-show="showWeeklyAds() &amp;&amp; !disableWeeklyAds()" ng-class="{noBottomPadding: showWeeklyAds() }" class="deals-section">
</section>
  <section id="couponsSection" ng-show="showCoupons()" data-qa="coupon section" ng-class="{noBottomPadding: showCoupons() }" class="deals-section">
  <script>/*<![CDATA[*/
requireQ(["everything"], function() {

  common.register('melange.gadgets.coupons', function () {

    return function ($scope, Coupons, DealsService, EnvLookup, $rootScope, $window, $timeout, windowSize, Beacon, Authorization) {

      var couponsPerSlide = 5;
      var carouselEl;

      $scope.coupons = [];
      $scope.couponChunkIndexes = [];
      $scope.initialized = false;
      $scope.couponsLoading = true;
      $scope.isPreviousDisabled = true;
      $scope.isForwardDisabled = false;
      $scope.loggedIn = EnvLookup.loggedIn;
      $scope.pageIndex = 0;
      $scope.numberOfCoupons = true;
      $scope.activeIndex = 0;
      $scope.couponPromotionImageId = EnvLookup.couponPromotionImageId;
      $scope.currentPage = 0;

      var OMNITURE_NAME = 'coupon widget';

      $scope.hasFilterTag = function (promotion) {
        return  _.contains(promotion.filterTags, EnvLookup.couponPromotionFilterTag)
      };

      $scope.onNextSlide = function (loadingCouponToCard) {
        $scope.getCarouselEl().off('slid.deals').one('slid.deals', function () {
          if ($scope.numberOfCoupons) {
            loadMoreCoupons();
          }
          syncCarouselState();
        });
        if (loadingCouponToCard) return;
        Beacon.registerCarouselNavigationChange(OMNITURE_NAME, 'next');
      };

      $scope.onPrevSlide = function () {
        $scope.getCarouselEl().off('slid.deals').one('slid.deals', function () {
          syncCarouselState();
        });
        Beacon.registerCarouselNavigationChange(OMNITURE_NAME, 'back');
      };

      var syncCarouselState = function () {
        setCurrentPage();
        setButtonEnabledStates();
        $scope.$apply();
      };

      var setCurrentPage = function () {
        $scope.currentPage = $scope.getCarouselEl().data("bs.carousel").getActiveIndex();
      };

      var setButtonEnabledStates = function () {
        var totalCouponPages = Math.ceil(_.flatten($scope.coupons).length / couponsPerSlide);
        $scope.isForwardDisabled = (totalCouponPages - 1) == $scope.currentPage;
        $scope.isPreviousDisabled = $scope.currentPage == 0;
      };

      var disableNavigation = function() {
        $scope.isForwardDisabled = true;
        $scope.isPreviousDisabled = true;
      }

      $scope.getCarouselEl = function () {
        return carouselEl || $('#couponCarousel');
      };

      var getTotalVisibleCoupons = function () {
        try {
          var items = $scope.getCarouselEl().find('.active').find('.deal');
          if (items) return items.length;
        }
        catch (err) {
        }
        return 0;
      };

     var scrollToTopAndOpenSignInDrawer = function(actionWasTriggeredFromModal) {
        if (!actionWasTriggeredFromModal) {
          $rootScope.$broadcast('signInEvent');
          return;
        }
        $timeout(function() {
          $rootScope.$broadcast('signInEvent');
        }, 750);
      };

      $scope.loadToCard = function (coupon, index) {
        var actionWasTriggeredFromModal = $scope.showCouponModal;
        $scope.closeCouponModal();
        var totalShowing = getTotalVisibleCoupons();
        if($scope.loggedIn){
        Authorization.query({authority: 'LOAD_COUPONS'},function (authResponse){
          if(authResponse.isAuthorized){

             hideCouponOperations(coupon, true);
             Coupons.addCoupon(coupon, function (couponResponse) {
               $scope.activeIndex = $scope.getCarouselEl().find('.item.active').index();
               $rootScope.$broadcast('couponLoadedToCard', coupon.id);
               $scope.onNextSlide(true);
               $scope.showCouponDetails = false;
               $scope.$root.fadeoutFlashMessages = [
                 {"message": "The coupon was successfully loaded to your card.", "msgClass": "success-msg"}
               ];
               Beacon.registerLoadCouponToCardFromCarousel(coupon, index, totalShowing, OMNITURE_NAME,
                 'load to card', true);

             }, function (error) {
               hideCouponOperations(coupon, false);
               if (error.data.errors && error.data.errors == "noPlusCardOrPreferredStore") {
                 if (!$scope.hasLoyaltyCard) Beacon.registerAddCardForCoupon(OMNITURE_NAME, coupon.id,
                   index);
                 $window.location.href = '/account/update?returnUrl=Coupons';
               } else {
                 $scope.showCouponDetails = false;
                 var errorMessage = (error.data.errors == "serviceCallFailed") ?
                   error.data.serviceMessage : "There was an error loading the coupon to your card.";
                 $scope.$root.fadeoutFlashMessages = [
                   {"message": errorMessage, "msgClass": "warning-msg"}
                 ];
               }
             });
         } else {
            $window.location.href =
              '/logout?redirectUrl=' + encodeURIComponent('/signIn');
         }
       });
        } else {
          var actionWasTriggeredFromModal = $scope.showCouponModal;
          var totalShowing = getTotalVisibleCoupons();
          Beacon.registerLoadCouponToCardFromCarousel(coupon, index, totalShowing, OMNITURE_NAME,
            'sign in to load', false);
          if (!actionWasTriggeredFromModal) {
            $rootScope.$broadcast('signInEvent');
            return;
          }
          $timeout(function() {
            $rootScope.$broadcast('signInEvent');
          }, 750);
        }
      };

      var processLoadToCard =  function (coupon,index){

      };

      $scope.$on('couponLoadedToCard', function (e, couponId) {
        $scope.removeCouponFromCarousel(couponId);
      });

      var hideCouponOperations = function (coupon, shouldHide) {
        coupon.hideLoadToCard = shouldHide;
        coupon.hideViewDetails = shouldHide;
      };

      $scope.removeCouponFromCarousel = function (couponId) {
        var allCoupons = _.flatten($scope.coupons);
        allCoupons = _.filter(allCoupons, function (coupon) {
          return coupon.id !== couponId;
        });
        $scope.coupons = [];
        $scope.paginateCoupons(allCoupons);
      };

      $scope.loadCardText = function () {
        if (!$scope.loggedIn) {
          return 'Sign in to Load';
        }
        else if ($scope.loggedIn && $scope.hasLoyaltyCard) {
          return 'Load to Card';
        }
        else ($scope.loggedIn && !$scope.hasLoyaltyCard)
        return  'Add Card to Load';
      };

      var filterPredicate = function (item) {
        var shouldShow = true;
        if (hasFilteredTags(item) == true) {
          shouldShow = false;
        }
        return shouldShow;
      };

      var loadCoupons = function (pageIndex) {
        $scope.initialized = true;

        Coupons.get({pageIndex: pageIndex}, function (response) {
          if (_.has(response, 'hasLoyaltyCard')) $scope.hasLoyaltyCard = response['hasLoyaltyCard'];

          response.coupons = _.filter(response.coupons, filterPredicate);

          $scope.paginateCoupons(response.coupons);
          $scope.couponsLoading = false;
          $scope.numberOfCoupons = response.numberOfCoupons > 0;
          carouselEl = $('#couponCarousel').carousel({interval: false});
        }, function () {
          $scope.coupons = [];
          $scope.couponsLoading = false;
          $scope.loadError = true;
          $scope.numberOfCoupons = false;
        });
      };

      var hasFilteredTags = function (coupon) {
        var filteredTags = EnvLookup.couponSpecialPromotionsFilteredTags.split(',');
        var filteredTagsFound = false;
        if (coupon.hasOwnProperty("filterTags")) {
          if (coupon.filterTags.length > 0) {
            _.each(coupon.filterTags, function (couponFilterTag) {
              _.each(filteredTags, function (filterTag) {
                if (couponFilterTag == filterTag) {
                  filteredTagsFound = true;
                  return;
                }
              });
            });
          }
        }
        return filteredTagsFound;
      };
      var loadMoreCoupons = function () {
        if ($scope.currentPage >= $scope.couponChunkIndexes.length - 3) {
          $scope.pageIndex += 1;
          $scope.isForwardDisabled = true;
          Coupons.get({pageIndex: $scope.pageIndex}, function (response) {
            response.coupons = _.filter(response.coupons, filterPredicate);
            $scope.paginateCoupons(response.coupons);
            $scope.numberOfCoupons = response.numberOfCoupons > 0;
            $scope.isForwardDisabled = false;
          }, function (e) {
            $scope.loadError = true;
          });
        }
      };

      $scope.$on('deals.switchedTo', function (e, id, fireBeacon) {
        if (id != 'coupons') return;
        if (!$scope.initialized) {
          $scope.repaginateCouponsForLayout(windowSize.rotatorColumnsForPage());
          loadCoupons(0);

          if (windowSize.responsiveEnabled()) {
            windowSize.registerResizeCallback(function () {
              if ($scope.repaginateCouponsForLayout(windowSize.rotatorColumnsForPage())) {
                carouselEl.find('.active').removeClass('active');
                carouselEl.find('.item:first-child').addClass('active');
                $scope.currentPage = 0;
                $scope.isPreviousDisabled = true;
                $scope.isForwardDisabled =
                Math.ceil(_.flatten($scope.coupons).length / couponsPerSlide) == 1;
              }
            });
          }
        }
        if(fireBeacon) {
          Beacon.registerCarouselNavigationChange(OMNITURE_NAME, 'tab');
        }
      });

      $scope.repaginateCouponsForLayout = function (newCouponsPerSlide) {
        var oldCouponsPerSlide = couponsPerSlide;
        couponsPerSlide = newCouponsPerSlide;

        if (newCouponsPerSlide != oldCouponsPerSlide) {
          $scope.paginateCoupons([]);
          return true;
        }
      };

      $scope.paginateCoupons = function (coupons) {
        var unchunkedCoupons = _.flatten($scope.coupons).concat(coupons);
        $scope.coupons = [];
        $scope.couponChunkIndexes = [];
        _.each(chunkArray(unchunkedCoupons, couponsPerSlide), function (couponChunk, index) {
          $scope.coupons.push(couponChunk);
          $scope.couponChunkIndexes.push(index);
        });
      };

      var chunkArray = function (array, chunkSize) {
        var chunkedArray = [];
        if (array) {
          for (var i = 0; i < array.length; i += chunkSize) {
            chunkedArray.push(array.slice(i, i + chunkSize));
          }
        }
        return chunkedArray;
      };

      $scope.openCouponModal = function(coupon, index) {
        $scope.modalCoupon = coupon;
        $scope.modalCoupon.index = index;
        disableNavigation();
        $scope.showCouponModal = true;
        Beacon.registerCarouselViewDetails(OMNITURE_NAME, coupon.id, index);
      };

      $scope.closeCouponModal = function() {
        $scope.showCouponModal = false;
        $('.side-modal-scrollable-area').scrollTop(0); //manip dom in controller :(
        setButtonEnabledStates();
      };

      var init = function () {
        $scope.repaginateCouponsForLayout(windowSize.rotatorColumnsForPage());
        $rootScope.$broadcast('deals.couponsInitialized');
      };

      init();
    };
  });

  melange.controller("couponsController", [
    '$scope', 'coupons.Service', 'deals.Service', 'EnvLookup', '$rootScope', '$window', '$timeout',
    'windowSize', 'beacon.Service','authorization.Service', melange.gadgets.coupons()
  ]);
});
/*]]>*/</script>

  <div ng-controller="couponsController">
    <div id="couponsTabContent">
      <div id="couponCarousel" class="carousel slide scoped-to-banner" deals-carousel-swipe="true" ng-swipe-left="swipeLeft()" ng-swipe-right="swipeRight()" ng-show="coupons.length &gt; 0 &amp;&amp; !loadError">
        <div side-modal="showCouponModal" data-qa="coupon side modal">
          <div class="side-modal-window-shade"></div>
          <div class="side-modal-inner">
            <h1 class="side-modal-heading" data-qa="coupon modal heading">{{modalCoupon.shortDescription}}</h1>
            <a class="side-modal-close-button" ng-click="closeCouponModal()" data-qa="coupon modal close button">Close</a>

            <div class="side-modal-scrollable-area">
              <div class="coupon-modal-body">
                <img ng-hide="!modalCoupon.imageUrl" class="coupon-modal-body-image" ng-src="{{modalCoupon.imageUrl}}" />
                <div class="coupon-modal-body-text-heading">{{modalCoupon.shortDescription}}</div>
                <div class="coupon-modal-body-text">
                  <div class="coupon-details" data-qa="coupon details modal description">{{modalCoupon.requirementDescription}}</div>
                  <br />
                  <div>Limit of one coupon per item. Digital Coupons and paper coupons may not be combined on the purchase
                    of a single item.</div>
                </div>
                <br />
              </div>
              <div class="coupon-modal-buttons">
              <button class="coupon-modal-load-coupon-button operation" ng-click="loadToCard(modalCoupon, modalCoupon.index)" ng-hide="coupon.hideLoadToCard" data-qa="load coupon button modal">{{loadCardText()}}</button>
              <button class="coupon-modal-cancel-button operation" ng-click="closeCouponModal()" ng-hide="coupon.hideLoadToCard" data-qa="cancel button coupon modal" value="Cancel">Cancel</button>
              </div>
            </div>
          </div>
        </div>
        <div class="carousel-inner">
          <div id="couponChunks-{{$index}}-{{$first}}" ng-repeat="couponChunkIndex in couponChunkIndexes track by $index" class="coupons-weeklyad-page item" theIndex="{{$index}}" theActiveIndex="{{activeIndex}}" ng-class="{active: activeIndex==$index}" data-qa="coupon carousel page">
            <div id="coupon-{{$index}}" ng-repeat="coupon in coupons[couponChunkIndex]" class="deal" ng-class="{first: $first, last: $last}" data-qa="coupon" data-qa-index="{{ $index }}" ng-if="$parent.$index &lt;= (currentPage + 2) &amp;&amp; $parent.$index &gt;= (currentPage - 2)">
              <div class="deal-body">
                <img class="deal-promo-img" ng-src="{{ couponPromotionImageId | assetSource }}" alt="" ng-show="hasFilterTag(coupon) &amp;&amp; !showDetails" />
                <div class="deal-slider">
                  <div id="coupon-{{coupon.id}}" ng-class="{noImage: !coupon.imageUrl}" class="deal-image-container">
                    <img ng-hide="!coupon.imageUrl" ng-src="{{coupon.imageUrl}}" />
                  </div>
                  <h1 class="deal-header">{{ coupon.shortDescription }}</h1>

                </div>
                <a class="deal-details-button" ng-click="showDetails=!showDetails; openCouponModal(coupon, {{$index+1}});" name="viewDetails" id="viewDetails" data-qa="coupon view details link-{{$index+1}}">View Details</a>
                <a class="load-coupon-button operation" ng-click="loadToCard(coupon, {{$index+1}})" ng-hide="coupon.hideLoadToCard" data-qa="load coupon button {{$index}}">{{loadCardText()}}</a>
                <div ng-show="coupon.isLoaded" class="search-coupons-loaded-text" data-qa="loaded to card text">
                  Loaded to Card
                </div>
              </div>
            </div>
          </div>
        </div>
        <div>
          <a class="left carousel-control" href="#couponCarousel" data-slide="prev" ng-disabled="isPreviousDisabled" ng-click="onPrevSlide()">&lsaquo;</a>
          <a class="right carousel-control" href="#couponCarousel" data-slide="next" data-qa="coupon carousel right arrow button" ng-disabled="isForwardDisabled" ng-click="onNextSlide()">&rsaquo;</a>
        </div>
      </div>
      <div class="deals-section-error-panel -with-get-started-button" ng-show="(loadError || coupons.length == 0)">
        <div ng-show="(loadError || coupons.length == 0) &amp;&amp; !couponsLoading" class="deals-section-error-action">
          <h2>We're sorry</h2>
          <p class="-coupon-get-started">There was a problem loading your coupons.
            Please click here to continue browsing all coupons.</p>
          <a class="button" href="/coupons">Get Started</a>
        </div>
        <div class="deals-section-error-loading" ng-show="couponsLoading">Loading</div>
      </div>
    </div>
  </div>
</section>

  <section id="couponPromotionsSection" ng-show="showCouponPromotions()" data-qa="couponPromotion section" ng-class="{noBottomPadding: showCouponPromotions() }" class="deals-section">
  <script>/*<![CDATA[*/

requireQ(["everything"], function() {
  common.register('melange.gadgets.couponPromotions', function () {

    return function ($scope,
                     Promotions,
                     DealsService,
                     EnvLookup,
                     $rootScope,
                     $window,
                     $timeout,
                     windowSize,
                     Coupons,
                     AccountService,
                     Beacon,
                     Authorization) {

      var promotionsPerSlide = 5;
      var carouselEl;

      $scope.promotions = [];
      $scope.promotionChunkIndexes = [];
      $scope.initialized = false;
      $scope.promotionLoading = true;
      $scope.isPreviousDisabled = true;
      $scope.isForwardDisabled = false;
      $scope.loggedIn = EnvLookup.loggedIn;
      $scope.pageIndex = 0;
      $scope.numberOfPromotions = true;
      $scope.activeIndex = 0;
      $scope.currentPage = 0;
      $scope.optedForMyExtras = false;
      $scope.optedForHotOffer = false;
      $scope.couponPromotionPublishedAs = EnvLookup.couponPromotionPublishedAs;
      $scope.couponPromotionViewAllURL = EnvLookup.couponPromotionViewAllURL;
      $scope.couponPromotionImageId = EnvLookup.couponPromotionImageId;
      $scope.couponPromotionMessageHeader = EnvLookup.couponPromotionMessageHeader;
      $scope.couponPromotionMessageText = EnvLookup.couponPromotionMessageText;
      $scope.couponPromotionButtonText = EnvLookup.couponPromotionButtonText;
      $scope.couponPromotionButtonAltId = EnvLookup.couponPromotionButtonAltId;
      $scope.couponPromotionButtonUrl = EnvLookup.couponPromotionButtonUrl;
      $scope.couponPromotionNotLoggedInMessageHeader =
      EnvLookup.couponPromotionNotLoggedInMessageHeader;
      $scope.couponPromotionNotLoggedInMessageText =
      EnvLookup.couponPromotionNotLoggedInMessageText;
      $scope.couponPromotionNotLoggedInButtonText = EnvLookup.couponPromotionNotLoggedInButtonText;
      $scope.couponPromotionNotLoggedInButtonAltId =
      EnvLookup.couponPromotionNotLoggedInButtonAltId;
      $scope.couponPromotionNotLoggedInButtonUrl = EnvLookup.couponPromotionNotLoggedInButtonUrl;

      $scope.isMyExtras = ($scope.couponPromotionPublishedAs == 'myextras') ? true : false;
      $scope.isHotOffer = $scope.isMyExtras && (EnvLookup.couponPromotionFilterTag ==
                                                EnvLookup.couponSpecialPromotionsFilteredTags) ?
          true : false;

      var OMNITURE_NAME = 'coupon promotion';

      $scope.onNextSlide = function (loadingCouponToCard) {
        getCarouselEl().off('slid').one('slid', function () {
          if ($scope.numberOfPromotions) {
            $scope.pageIndex += 1;
          }
          syncCarouselState();
        });
        if (loadingCouponToCard) return;
        Beacon.registerCarouselNavigationChange(OMNITURE_NAME, 'next');
      };

      $scope.onPrevSlide = function () {
        getCarouselEl().off('slid').one('slid', function () {
          syncCarouselState();
        });
        Beacon.registerCarouselNavigationChange(OMNITURE_NAME, 'back');
      };

      $scope.onShowDetails = function (promotion, showDetails, index) {
        if (showDetails) {
          Beacon.registerCarouselViewDetails(OMNITURE_NAME, promotion.id, index);
        }
      }

      var syncCarouselState = function () {
        setCurrentPage();
        setButtonEnabledStates();
        $scope.$apply();
      };

      var setCurrentPage = function () {
        $scope.currentPage = getCarouselEl().data("bs.carousel").getActiveIndex();
      };

      var setButtonEnabledStates = function () {
        var totalPages = Math.ceil(_.flatten($scope.promotions).length / promotionsPerSlide);
        $scope.isForwardDisabled = (totalPages - 1) == $scope.currentPage;
        $scope.isPreviousDisabled = $scope.currentPage == 0;
      };

      var getCarouselEl = function () {
        return carouselEl || $('#promotionCarousel');
      };

      $scope.hasFilterTag = function (promotion) {
        return  _.contains(promotion.filterTags, EnvLookup.couponPromotionFilterTag);
      };

      var disablePreviousNextOnLoad = function () {
        if (_.flatten($scope.promotions).length <= promotionsPerSlide) {
          $scope.isForwardDisabled = true;
          $scope.isPreviousDisabled = true;
        }
      }

      var getTotalVisibleCoupons = function () {
        try {
          var items = getCarouselEl().find('.active').find('.deal');
          if (items) return items.length;
        }
        catch (err) {
        }
        return 0;
      };

      $scope.loadToCard = function (coupon, index) {
        var totalShowing = getTotalVisibleCoupons();
        if($scope.loggedIn){
          Authorization.query({authority: 'LOAD_COUPONS'},function (authResponse){
            if(authResponse.isAuthorized){
              hideCouponOperations(coupon, true);
              Coupons.addCoupon(coupon, function (couponResponse) {
                $scope.activeIndex = getCarouselEl().find('.item.active').index();
                $rootScope.$broadcast('couponLoadedToCard', coupon.id);
                $scope.onNextSlide(true);
                $scope.showCouponDetails = false;
                $scope.$root.fadeoutFlashMessages = [
                  {"message": "The coupon was successfully loaded to your card.", "msgClass": "success-msg"}
                ];
                Beacon.registerLoadCouponToCardFromCarousel(coupon, index, totalShowing, OMNITURE_NAME,
                  'load to card', true);

              }, function (error) {
                hideCouponOperations(coupon, false);
                if (error.data.errors && error.data.errors == "noPlusCardOrPreferredStore") {
                  if (!$scope.hasLoyaltyCard) Beacon.registerAddCardForCoupon(OMNITURE_NAME, coupon.id,
                    index);
                    $window.location.href = '/account/update?returnUrl=CouponPromotions';
                } else {
                  $scope.showCouponDetails = false;
                  var errorMessage = (error.data.errors == "serviceCallFailed") ?
                    error.data.serviceMessage : "There was an error loading the coupon to your card.";
                  $scope.$root.fadeoutFlashMessages = [
                    {"message": errorMessage, "msgClass": "warning-msg"}
                  ];
                }
              });
            } else {
              $window.location.href =
                '/logout?redirectUrl=' + encodeURIComponent('/signIn');
            }
          });
        } else {
          $rootScope.$broadcast('signInEvent');
          Beacon.registerLoadCouponToCardFromCarousel(coupon, index, totalShowing, OMNITURE_NAME,
            'sign in to load', false);
        }
      };

      $scope.$on('couponLoadedToCard', function (e, couponId) {
        $scope.removeCouponFromCarousel(couponId);
      });

      var hideCouponOperations = function (coupon, shouldHide) {
        coupon.hideLoadToCard = shouldHide;
        coupon.hideViewDetails = shouldHide;
      };

      $scope.removeCouponFromCarousel = function (couponId) {
        var allCoupons = _.flatten($scope.promotions);
        allCoupons = _.filter(allCoupons, function (coupon) {
          return coupon.id !== couponId;
        });
        $scope.promotions = [];
        $scope.paginatePromotions(allCoupons);
      };

      $scope.loadCardText = function () {
        if (!$scope.loggedIn) {
          return 'Sign in to Load';
        }
        else if ($scope.loggedIn && $scope.hasLoyaltyCard) {
          return 'Load to Card';
        } else ($scope.loggedIn && !$scope.hasLoyaltyCard)
        return  'Add Card to Load';
      };

      var loadPromotions = function () {
        $scope.initialized = true;
        $scope.promotionsLoading = true;

        Promotions.get({filterTag: EnvLookup.couponPromotionFilterTag, isMyExtras: $scope.isMyExtras, optedForMyExtras: $scope.optedForMyExtras,
          isHotOffer: $scope.isHotOffer, optedForHotOffer: $scope.optedForHotOffer},
            function (response) {
              if (_.has(response, 'hasLoyaltyCard')) $scope.hasLoyaltyCard =
                                                     response['hasLoyaltyCard'];
              $scope.paginatePromotions(response.promotions);
              $scope.promotionsLoading = false;
              $scope.numberOfPromotions = response.numberOfPromotions > 0 ? true : false;
              carouselEl = $('#promotionCarousel').carousel({interval: false});
              disablePreviousNextOnLoad();
            }, function () {
              $scope.promotions = [];
              $scope.promotionsLoading = false;
              $scope.loadError = true;
              $scope.numberOfPromotions = false;
            });
      };

      $scope.$on('deals.switchedTo', function (e, id) {
        if (id != 'couponPromotions') return;
        if (!$scope.initialized) {
          $scope.repaginatePromotionsForLayout(windowSize.rotatorColumnsForPage());
          loadPromotions();

          if (windowSize.responsiveEnabled()) {
            windowSize.registerResizeCallback(function () {
              if ($scope.repaginatePromotionsForLayout(windowSize.rotatorColumnsForPage())) {
                carouselEl.find('.active').removeClass('active');
                carouselEl.find('.item:first-child').addClass('active');
                $scope.currentPage = 0;
                $scope.isPreviousDisabled = true;
                $scope.isForwardDisabled =
                Math.ceil(_.flatten($scope.promotions).length / promotionsPerSlide) == 1;
              }
            });
          }
        }
        Beacon.registerCarouselNavigationChange(OMNITURE_NAME, 'tab');
      });

      $scope.repaginatePromotionsForLayout = function (newPromotionsPerSlide) {
        var oldPromotionsPerSlide = promotionsPerSlide;
        promotionsPerSlide = newPromotionsPerSlide;

        if (newPromotionsPerSlide != oldPromotionsPerSlide) {
          $scope.paginatePromotions([]);
          return true;
        }
      };

      $scope.paginatePromotions = function (promotions) {
        var unchunkedPromotions = _.flatten($scope.promotions).concat(promotions);
        $scope.promotions = [];
        $scope.promotionChunkIndexes = [];
        _.each(chunkArray(unchunkedPromotions, promotionsPerSlide),
            function (promotionChunk, index) {
              $scope.promotions.push(promotionChunk);
              $scope.promotionChunkIndexes.push(index);
            });
      };

      $scope.showCouponPromotionsError = function () {
        return ($scope.loadError || $scope.promotions.length == 0) &&
               ($scope.couponPromotionPublishedAs == 'promotion');
      };

      $scope.showMyExtrasError = function () {
        if ($scope.isHotOffer) {
          return ($scope.loadError || !$scope.loggedIn ||
                  ($scope.loggedIn && $scope.optedForHotOffer && $scope.promotions.length == 0) ||
                  ($scope.loggedIn && !$scope.optedForHotOffer))
              && ($scope.isHotOffer);
        } else if ($scope.isMyExtras) {
          return ($scope.loadError || !$scope.loggedIn ||
                  ($scope.loggedIn && $scope.optedForMyExtras && $scope.promotions.length == 0) ||
                  ($scope.loggedIn && !$scope.optedForMyExtras))
              && ($scope.isMyExtras);
        }
      };

      $scope.showServerErrorForMyExtras = function () {
        return $scope.loadError && !$scope.promotionsLoading;
      }

      $scope.showNoCouponMessageForMyExtras = function () {
        if ($scope.isHotOffer) {
          return !$scope.loadError && $scope.loggedIn && $scope.optedForHotOffer &&
                 $scope.promotions.length == 0 && !$scope.promotionsLoading;
        } else if ($scope.isMyExtras) {
          return !$scope.loadError && $scope.loggedIn && $scope.optedForMyExtras &&
                 $scope.promotions.length == 0 && !$scope.promotionsLoading;
        }
      }

      $scope.showNotLoggedInMessageForMyExtras = function () {
        if ($scope.isHotOffer) {
          return (!$scope.loggedIn || ($scope.loggedIn && !$scope.optedForHotOffer)) &&
                 !$scope.promotionsLoading;
        } else if ($scope.isMyExtras) {
          return (!$scope.loggedIn || ($scope.loggedIn && !$scope.optedForMyExtras)) &&
                 !$scope.promotionsLoading;
        }
      }

      var chunkArray = function (array, chunkSize) {
        var chunkedArray = [];
        if (array) {
          for (var i = 0; i < array.length; i += chunkSize) {
            chunkedArray.push(array.slice(i, i + chunkSize));
          }
        }
        return chunkedArray;
      };

      var init = function () {
        $scope.repaginatePromotionsForLayout(windowSize.rotatorColumnsForPage());
        $rootScope.$broadcast('deals.couponPromotionsInitialized');

        if ($scope.loggedIn && $scope.couponPromotionPublishedAs == 'myextras') {
          AccountService.emailPreferences(function (response) {
            $scope.emailUngroupedPreferences = response.emailUngroupedPreferences;
            $scope.emailGroupedPreferences = response.emailGroupedPreferences;

            _.forEach(_.keys($scope.emailGroupedPreferences), function (key) {
              if (key.indexOf("extras") > -1) {
                _.forEach($scope.emailGroupedPreferences, function (groupedPref) {
                  _.forEach(groupedPref, function (child) {
                    if (child.selected) $scope.optedForMyExtras = true;

                    // Condition to check whether opted for HOT offer or not
                    if ((EnvLookup.couponSpecialPromotionsEmailPreferenceId == child.id) &&
                        child.selected) $scope.optedForHotOffer = true;
                  });
                });
              }
            });
          });
        }
      };

      init();
    };
  });
});
/*]]>*/</script>
  <script>
    requireQ(["everything"], function() {
      melange.controller('couponPromotions_identifier', [
        '$scope', 'couponPromotions.Service', 'deals.Service', 'EnvLookup', '$rootScope', '$window',
        '$timeout', 'windowSize', 'coupons.Service', 'account.Service', 'beacon.Service','authorization.Service',
            melange.gadgets.couponPromotions(null || [])
      ])
      ;
    });
  </script>

  <div ng-controller="couponPromotions_identifier">
    <div id="promotionsTabContent">
      <div id="promotionCarousel" class="carousel slide" deals-carousel-swipe="true" ng-swipe-left="swipeLeft()" ng-swipe-right="swipeRight()" ng-show="promotions.length &gt; 0 &amp;&amp; !loadError">
        <div class="carousel-inner">
          <div id="promotionChunks-{{$index}}-{{$first}}" ng-repeat="promotionChunkIndex in promotionChunkIndexes track by $index" class="deals item" ng-class="{active: activeIndex==$index}" data-qa="promotion carousel page">
            <div id="promotion-{{$index}}" ng-repeat="promotion in promotions[promotionChunkIndex]" class="deal" ng-class="{first: $first, last: $last}" data-qa="promotion" data-qa-index="{{ $index }}" ng-if="$parent.$index &lt;= (currentPage + 2) &amp;&amp; $parent.$index &gt;= (currentPage - 2)">

              <div class="deal-body">
                <img class="deal-promo-img" ng-src="{{ couponPromotionImageId | assetSource }}" alt="" ng-show="hasFilterTag(promotion) &amp;&amp; !showDetails" />
                <div class="deal-slider" ng-class="{&#39;showing-details&#39; : showDetails}">
                  <div id="promotion-{{promotion.id}}" ng-class="{noImage: !promotion.imageUrl}" class="deal-image-container">
                    <img ng-hide="!promotion.imageUrl" ng-src="{{promotion.imageUrl}}" />
                  </div>
                  <h1>{{ promotion.shortDescription }}</h1>
                  <div class="deal-details" scroll-fade="showDetails" data-qa="promotion details" data-qa-state="{{ showDetails ? &#39;visible&#39; : &#39;&#39; }}" reset-scroll="showDetails">
                    <h5>{{ promotion.shortDescription }}</h5>
                    <p>{{ promotion.requirementDescription }}</p>
                    <p>Limit of one coupon per item. Digital Coupons and paper coupons may not be combined on the purchase of a single item.</p>
                  </div>
                </div>
                <a class="deal-details-button" ng-click="showDetails=!showDetails; onShowDetails(promotion, showDetails, {{$index+1}});" name="viewDetails" id="viewDetails" ng-class="{&#39;showing-details&#39; : showDetails}" data-qa="promotion view details link">{{showDetails ? 'Hide' : 'View'}} Details</a>
                <a class="load-coupon-button operation" ng-click="loadToCard(promotion, {{$index+1}})" ng-hide="promotion.hideLoadToCard" data-qa="promotion load to card button">{{loadCardText()}}</a>
              </div>
            </div>
          </div>
        </div>
        <div>
          <a class="left carousel-control" href="#promotionCarousel" data-slide="prev" ng-disabled="isPreviousDisabled" ng-click="onPrevSlide()">&lsaquo;</a>
          <a class="right carousel-control" href="#promotionCarousel" data-slide="next" data-qa="promotion carousel right arrow button" ng-disabled="isForwardDisabled" ng-click="onNextSlide()">&rsaquo;</a>
        </div>
      </div>
      <div class="deals-section-error-panel -with-get-started-button" ng-show="showCouponPromotionsError()">
        <div ng-show="loadError &amp;&amp; !promotionsLoading" class="deals-section-error-action">
          <h2>We're sorry</h2>
          <p class="-coupon-get-started">There was a problem loading your coupon promotions.
            Please click here to continue browsing all coupon promotions.</p>
          <a class="button" href="{{couponPromotionViewAllURL}}">Get Started</a>
        </div>
        <div ng-show="!loadError &amp;&amp; (promotions.length == 0) &amp;&amp; !promotionsLoading" class="deals-section-error-action">
          <h2>{{couponPromotionMessageHeader}}</h2>
          <p class="-coupon-get-started">{{couponPromotionMessageText}}</p>
          <a class="button" href="{{couponPromotionButtonUrl}}" title="{{couponPromotionButtonAltId}}">{{couponPromotionButtonText}}</a>
        </div>
        <div ng-show="promotionsLoading" class="deals-section-error-loading">Loading</div>
      </div>

      <div class="deals-section-error-panel -with-get-started-button" ng-show="showMyExtrasError()">
        <div ng-show="showServerErrorForMyExtras()" class="deals-section-error-action">
          <h2>We're sorry</h2>
          <p class="-coupon-get-started">There was a problem loading your coupon promotions.
            Please click here to continue browsing all coupon promotions.</p>
          <a class="button" href="{{couponPromotionViewAllURL}}">Get Started</a>
        </div>
        <div ng-show="showNoCouponMessageForMyExtras()" class="deals-section-error-action">
          <h2>{{couponPromotionMessageHeader}}</h2>
          <p class="-coupon-get-started">{{couponPromotionMessageText}}</p>
          <a class="button" href="{{couponPromotionButtonUrl}}" title="{{couponPromotionButtonAltId}}">{{couponPromotionButtonText}}</a>
        </div>
        <div ng-show="showNotLoggedInMessageForMyExtras()" class="deals-section-error-action">
          <h2>{{couponPromotionNotLoggedInMessageHeader}}</h2>
          <p class="-coupon-get-started">{{couponPromotionNotLoggedInMessageText}}</p>
          <a class="button" href="{{couponPromotionNotLoggedInButtonUrl}}" title="{{couponPromotionNotLoggedInButtonAltId}}">{{couponPromotionNotLoggedInButtonText}}</a>
        </div>
        <div ng-show="promotionsLoading" class="deals-section-error-loading">Loading</div>
      </div>
    </div>
  </div>
</section>

  <div id="noWeeklyAdsSection" class="deals-section deals-section-error-panel" ng-show="showWeeklyAdsError()" data-qa="no weekly ads error">
    <div class="deals-section-error-action">
      <p class="-error-weekly-ads">We're sorry, there was a problem while loading your weekly ad,
      and we're working to resolve the issue as soon as possible.
      Please try again later.</p>
    </div>
  </div>
  <div id="noCouponsSection" class="deals-section deals-section-error-panel" ng-show="showCouponsError()">
    <div class="deals-section-error-action" data-qa="no coupons error">
      <p>We're sorry, there was a problem loading your coupons,
      and we're working to resolve the issue as soon as possible.
      Please try again later.</p>
    </div>
  </div>
</div>





        </div>

        <section class="feature-section">
  <script>/*<![CDATA[*/
requireQ(["everything"], function() {
  common.register('melange.gadgets.feature', function (slot_content) {
    return function ($scope, Content, Asset, Beacon, $window, windowSize) {
      if (slot_content.length == 0) return;
      $scope.features = [];
      $scope.isMultiFeatureContent = false;

      $scope.responsiveEnabled = windowSize.responsiveEnabled();
      var collection = slot_content[0];

      $scope.track = function (pos, link, headline) {
        Beacon.registerFeatureClick(link, pos, headline);
      };

      Content.query({id: _.map(collection.ids, function (item) { return item.identifier; })},
          function (data) {
            $scope.features = data;
            $scope.isMultiFeatureContent = $scope.features && $scope.features.length > 1;
            $.each($scope.features, function (index, feature) {
              if (feature && feature.image) {
                Asset.get({id: feature.image}, function (metadata) {
                  feature.imageMetadata = metadata;
                  feature.learnMoreLink = '/topic/' + feature.slug;
                });
              }
            });
            $('#featureCarousel').carousel({interval: false});
          });
    }
  });
});
/*]]>*/</script>
  <script>
    requireQ(["everything"], function() {
      melange.controller('feature_identifier', [
        '$scope', 'content.Service', 'asset.Service', 'beacon.Service', '$window', 'windowSize',
            melange.gadgets.feature([{'ids':[{'weight':2.552,'banners':{'FredMeyer':{'divisions':{'701':{'weight':'0.05','endDate':'2015-02-21T23:59:59.999-05:00','startDate':'2015-02-15T00:00:00.000-05:00'}},'allDivisionSelected':true,'weight':0.05}},'rules':{'and':[{'rule':'banners?.containsKey(bannerName)','weight':0.001},{'or':[{'and':[{'rule':'banners[bannerName]?.divisions?.containsKey(divisionNumber)','weight':'(banners[bannerName]?.divisions[divisionNumber]?.weight?:0.001).toDouble()'},{'rule':'((banners[bannerName]?.divisions[divisionNumber]?.startDate?:startDate)..(banners[bannerName]?.divisions[divisionNumber]?.endDate?:endDate)).containsWithinBounds(today)','weight':0.001}]},{'and':[{'rule':'banners[bannerName]?.allDivisionSelected','weight':'(banners[bannerName]?.weight?:0.001).toDouble()'},{'rule':'banners[bannerName].divisions.every{key,value-> ((value?.startDate?:startDate)..(value?.endDate?:endDate)).containsWithinBounds(today) }','weight':0.001}]}]},{'rule':'allowedLoginState == \'all\' || allowedLoginState == loggedIn.toString()','weight':0.5},{'rule':'allowedLoginStateShoppers == \'all\' || allowedLoginStateShoppers == hasLoyaltyCard.toString()','weight':0.5},{'rule':'userPreferredStore == \'all\' || userPreferredStore == hasPreferredStore.toString()','weight':0.5},{'rule':'registeredUser == \'all\' || registeredUser == isRegistered.toString()','weight':0.5},{'rule':'emailOptInUser == \'all\' || emailOptInUser == isEmailOptInUser.toString()','weight':0.5}]},'identifier':'54de693584aec5bc329dfa8e','allowedLoginState':'all','allowedLoginStateShoppers':'all','userPreferredStore':'all','registeredUser':'all','emailOptInUser':'all'},{'weight':2.542,'banners':{'FredMeyer':{'divisions':{'701':{'weight':'0.04','endDate':'2015-02-21T23:59:59.999-05:00','startDate':'2015-02-15T00:00:00.000-05:00'}},'allDivisionSelected':true,'weight':0.04}},'rules':{'and':[{'rule':'banners?.containsKey(bannerName)','weight':0.001},{'or':[{'and':[{'rule':'banners[bannerName]?.divisions?.containsKey(divisionNumber)','weight':'(banners[bannerName]?.divisions[divisionNumber]?.weight?:0.001).toDouble()'},{'rule':'((banners[bannerName]?.divisions[divisionNumber]?.startDate?:startDate)..(banners[bannerName]?.divisions[divisionNumber]?.endDate?:endDate)).containsWithinBounds(today)','weight':0.001}]},{'and':[{'rule':'banners[bannerName]?.allDivisionSelected','weight':'(banners[bannerName]?.weight?:0.001).toDouble()'},{'rule':'banners[bannerName].divisions.every{key,value-> ((value?.startDate?:startDate)..(value?.endDate?:endDate)).containsWithinBounds(today) }','weight':0.001}]}]},{'rule':'allowedLoginState == \'all\' || allowedLoginState == loggedIn.toString()','weight':0.5},{'rule':'allowedLoginStateShoppers == \'all\' || allowedLoginStateShoppers == hasLoyaltyCard.toString()','weight':0.5},{'rule':'userPreferredStore == \'all\' || userPreferredStore == hasPreferredStore.toString()','weight':0.5},{'rule':'registeredUser == \'all\' || registeredUser == isRegistered.toString()','weight':0.5},{'rule':'emailOptInUser == \'all\' || emailOptInUser == isEmailOptInUser.toString()','weight':0.5}]},'identifier':'54de68b784aec5bc329dfa8d','allowedLoginState':'all','allowedLoginStateShoppers':'all','userPreferredStore':'all','registeredUser':'all','emailOptInUser':'all'}]}] || [])
      ]);
    });
  </script>

    <div ng-controller="feature_identifier">
      <div id="featureCarousel" feature-carousel-swipe="" ng-swipe-left="swipeLeft()" ng-swipe-right="swipeRight()" class="carousel slide feature-carousel">
        <div class="carousel-indicators-wrapper" ng-show="features.length &gt; 1">
          <ol class="carousel-indicators">
            <li data-target="#featureCarousel" data-slide-to="{{$index}}" ng-class="{active:$first}" ng-repeat="feature in features"></li>
          </ol>
        </div>
        <div class="carousel-inner">
          <div ng-repeat="feature in features" ng-class="{item: true, active: $first}">
            <div class="feature" ng-show="feature" data-qa="feature carousel item">
              <span ng-if="!responsiveEnabled" ng-show="feature.imageMetadata.frames.feature" class="feature-image-container">
                <croppedimg src="{{ feature.image | assetSource }}" dimensions="feature.imageMetadata.frames.feature" viewport="274x274" imageMetaData="feature.imageMetadata"></croppedimg>
              </span>

              <span ng-if="responsiveEnabled" ng-show="feature.imageMetadata.frames.feature" class="feature-image-container">
                <span show-media-alt="{{ feature.imageMetadata.name }}" show-media-src="{{ feature.imageMetadata.frames.feature.channels.tablet.id | assetSource }}" show-media="(min-width: 321px) and (max-width: 610px)"></span>
                <span data-qa="feature carousel responsive default image" show-media-alt="{{ feature.imageMetadata.name }}" show-media-src="{{ feature.imageMetadata.frames.feature.channels.desktop.id | assetSource }}" show-media="(max-width: 320px), (min-width: 611px)" show-media-default="true"></span>
              </span>


              <div class="feature-text-container">
                <h1 class="feature-text-header" data-qa="feature text header">{{ feature.heroPanelHeadline || feature.headline }}</h1>
                <div class="feature-text-body" data-qa="feature text body" ng-bind-html=" (feature.heroPanelRotatorText || feature.body) | truncate: 350 | markdown | trusted"></div>
                <a class="feature-text-link" data-qa="feature text link" ng-click="track($index, feature.learnMoreLink, feature.heroPanelHeadline ? feature.heroPanelHeadline : feature.headline)" href="">{{(feature.callToActionText || "Learn More" )| truncate: 100 }}</a>
              </div>
            </div>
          </div>
        </div>
        <div ng-show="isMultiFeatureContent">
          <a class="left carousel-control" href="#featureCarousel" data-slide="prev">&lsaquo;</a>
          <a class="right carousel-control" href="#featureCarousel" data-slide="next">&rsaquo;</a>
        </div>
      </div>
    </div>
</section>
      </div>
    </div>

    <div>
  <div class="scoped-to-banner">
    <script>
      requireQ(["everything"], function() {
        melange.controller('footer_identifier', [
          '$scope', 'content.Service', '$window', 'trackable.Service',
          function ($scope, Content, $window, Trackable) {
            var slot_content =
            ['534e0bf7abbf1957860e2406']
            ||
            [];
            Content.queryBySlotContent(slot_content, function (data) {
              var html = $(data[0].body);
              var trackableHTML = $(Trackable.trackAnchors(html, "footer"));
              trackableHTML.find('#responsive-footer-feedback')
                  .attr('onclick', 'return openOpinionLabPopup()');

              $window.openOpinionLabPopup = function () {
                $scope.$emit('showOpinionLabPopup');
                $scope.$apply();
                return false;
              };

              if (trackableHTML.size() > 0) {
                $scope.messages = trackableHTML[0].outerHTML;
              }
            });
          }
        ]);
      });
    </script>
    <footer class="banner-footer" ng-bind-html="messages | trusted" ng-controller="footer_identifier"></footer>
    <div class="version">
      <div style="display:none;">site</div>
      <div style="display:none;">5.27.2-4_ge45b4a5/1h</div>
    </div>
    <span seo-crawlable-indicator="true"></span>
  </div>
</div>
    <div>
    <div class="scoped-to-banner">
        <div class="footerCopyRights">
            <p>All Contents &copy; Copyright <span>2015</span> The Kroger Co. All Rights Reserved </p>
            <p class="policyLinks"><a href="/pharmacyprivacy">Pharmacy Privacy Notice</a> <span class="footer-copyright-pipe">|</span>
                <a data-qa="terms_and_conditions" href="/termsandconditions">Terms and Conditions</a> <span class="footer-copyright-pipe">|</span>
                <a data-qa="privacy_policy" href="/privacypolicy">Privacy Policy</a></p>
        </div>
    </div>
</div>

    <div><script language="JavaScript">
  requireQ(["everything"], function() {
    var omnitureEnabled = 'true';
    melange.app.beacon.omnitureAccount = 'krgrfredmeyerprod,krgrglobalprod';
    melange.app.beacon.globals =
    {
      loggedIn: false,
      bannerName: 'FredMeyer',
      pid: '',
      channel: 'web',
      loyalMember: null
    };

    var track = function() {};

    melange.controller('TrackingController', [
      '$rootScope', 'beacon.Service', function ($rootScope, Beacon) {
        var topNavLoaded, topicLoaded, pageLoadSent = false;
        var waitForTopic = location.pathname.indexOf("/topic/") == 0;

        $rootScope.$on('topNavigationLoaded', function () {
          topNavLoaded = true;
          if (!waitForTopic || topicLoaded) {
            pageLoad();
          }
        });

        $rootScope.$on('topicLoaded', function () {
          topicLoaded = true;
          if (topNavLoaded) {
            pageLoad();
          }
        });

        function pageLoad() {
          if (!pageLoadSent) {
            pageLoadSent = true;
            Beacon.registerPageLoad();
          }
        };

        window.track = function (elementName, pageName, href, navType) {
          if (omnitureEnabled === 'true') {
            if (navType == 'topnav') {
              Beacon.registerNavClick('topnav_' + elementName, href);
            } else {
              Beacon.registerFooterLinkClick('footer_' + elementName, href);
            }
            return false;
          }
        };
      }
    ]);
  });
</script>
<noscript>
  <a href="http://www.omniture.com" title="Web Analytics">
    <img height="1" width="1" border="0" alt="" src="http://krgrfredmeyerprod,krgrglobalprod.112.2O7.net/b/ss/krgrfredmeyerprod,krgrglobalprod/1/H.14--NS/0" />
  </a>
</noscript>

<div ng-controller="TrackingController" style="display:none;">
</div></div>

    <div><!--
OnlineOpinion v5.6.5
Released: 12/17/2012. Compiled 01/02/2013 10:54:34 AM -0600
Branch: master 6f7c9076b20d959805996192556bbd12b2014c7d
Components: Full
The following code is Copyright 1998-2013 Opinionlab, Inc.  All rights reserved. Unauthorized use is prohibited. This product and other products of OpinionLab, Inc. are protected by U.S. Patent No. 6606581, 6421724, 6785717 B1 and other patents pending. http://www.opinionlab
--><!-- INVITATION PROMPT MARKUP --><noscript>This JavaScript enables OnlineOpinion, a method for collecting secure feedback data.</noscript>
<script>
  /*<![CDATA[*/
  requireQ(["everything"], function() {
    var invite_percentage = 5;
    var isOpinionLabAllowed = true;
    /*]]>*/

    // BST-3158 - Sadique and George - This is to take care of OpinionLab showing up on Android mobile devices.

    if (isOpinionLabAllowed) {
      var oo_invite = wireUpOpinionLabInvite();
    }

    function wireUpOpinionLabInvite() {
      return new OOo.Invitation({
        /* REQUIRED - Asset identification */
        pathToAssets: '/fragment/',
        /* OPTIONAL - Configuration */
        promptMarkup: 'opinionlabInvitationPrompt',
        monitorWindow: 'opinionlabInvitationMonitor',
        responseRate: invite_percentage,
        repromptTime: 2592000,
        promptDelay: 4,
        popupType: 'popunder',
//	, companyLogo: '/onlineopinionV5/logo.gif'  // 355px by 55px
        referrerRewrite: {
          searchPattern: /:\/\//g,
          replacePattern: '://invite.'
        }
      });
    };
  });
</script>
<!-- END: OnlineOpinion v5.6.5 --></div>
  </div>
  <div>

<script type="text/javascript">
window.localEnvironment.socialRibbon = {
  facebook:'https://www.facebook.com/fredmeyer',
  twitter:'https://twitter.com/fred_meyer',
  youtube:'https://www.youtube.com/user/FredMeyerSocial',
  pinterest:'https://www.pinterest.com/fred_meyer/',
  mobilegoogleplay:'https://play.google.com/store/apps/details?id=com.fredmeyer.mobile',
  mobileappstore:'https://itunes.apple.com/us/app/fred-meyer/id584446630?ls=1&mt=8'
};


</script>
<script>/*<![CDATA[*/
requireQ(["everything"], function() {
  common.register('melange.gadgets.socialRibbon',
      melange.gadgets.socialRibbon = function ($scope, $window) {
        $scope.twitter = $window.localEnvironment.socialRibbon.twitter;
        $scope.facebook = $window.localEnvironment.socialRibbon.facebook;
        $scope.youtube = $window.localEnvironment.socialRibbon.youtube;
        $scope.pinterest = $window.localEnvironment.socialRibbon.pinterest;
        $scope.android = $window.localEnvironment.socialRibbon.mobilegoogleplay;
        $scope.apple = $window.localEnvironment.socialRibbon.mobileappstore;

        $scope.showTwitter = !_.isEmpty($scope.twitter);
        $scope.showFacebook = !_.isEmpty($scope.facebook);
        $scope.showPinterest = !_.isEmpty($scope.pinterest);
        $scope.showYoutube = !_.isEmpty($scope.youtube);
        $scope.showAndroid = !_.isEmpty($scope.android);
        $scope.showApple = !_.isEmpty($scope.apple);
        $scope.isSocialIconsEmpty =
        (_.isEmpty($scope.twitter) && _.isEmpty($scope.facebook) && _.isEmpty($scope.youtube) &&
         _.isEmpty($scope.pinterest));
        $scope.isMobileIconsEmpty = (_.isEmpty($scope.android) && _.isEmpty($scope.apple));
        $scope.ribbonVisible = !($scope.isSocialIconsEmpty && $scope.isMobileIconsEmpty);
      });

  melange.controller('socialRibbonController', ['$scope', '$window', melange.gadgets.socialRibbon]);
});
/*]]>*/
</script>
<div ng-controller="socialRibbonController" ng-show="ribbonVisible" class="scoped-to-banner">
  <div class="socialIconRibbon">
    <ul id="socialRibbon">
      <li class="twitter" data-qa="socialRibbon.twitter" ng-show="showTwitter"><a ng-href="{{twitter}}"></a></li>
      <li class="facebook" data-qa="socialRibbon.facebook" ng-show="showFacebook"><a ng-href="{{facebook}}"></a></li>
      <li class="youtube" data-qa="socialRibbon.youtube" ng-show="showYoutube"><a ng-href="{{youtube}}"></a></li>
      <li class="pininterest" data-qa="socialRibbon.pininterest" ng-show="showPinterest"><a ng-href="{{pinterest}}"></a></li>
      <li class="separator" data-qa="socialRibbon.separator" ng-hide="isSocialIconsEmpty || isMobileIconsEmpty"></li>
      <li class="android" data-qa="socialRibbon.android" ng-show="showAndroid"><a ng-href="{{android}}"></a></li>
      <li class="apple" data-qa="socialRibbon.apple" ng-show="showApple"><a ng-href="{{apple}}"></a></li>
    </ul>
  </div>
</div>
</div>
</div>

<div><script>
  Q.all(allAppPromises).then(function() {
    appReadyDeferred.resolve();
  });
  var addViewportMetaTagForResponsive = function() {
    if(document.getElementById("grid-wrap").className.indexOf('row-fluid') > -1){
      var viewPortTag = document.createElement('meta');
      viewPortTag.id = "viewport";
      viewPortTag.name = "viewport";
      viewPortTag.content = "user-scalable=no, width=device-width, initial-scale=1, maximum-scale=1";
      window.parent.document.getElementsByTagName('head')[0].appendChild(viewPortTag);
    }
  }
  addViewportMetaTagForResponsive();

</script>

</div>
</body>
</html>";i:2;s:4:"2819";}